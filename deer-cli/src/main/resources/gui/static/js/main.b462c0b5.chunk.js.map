{"version":3,"sources":["assets/img/deer-logo.svg","components/Reader/FileModelReader.jsx","components/Writer/FileModelWriter.jsx","components/Reader/SparqlModelReader.jsx","components/Operator/FilterEnrichmentOperator.jsx","components/Operator/LinkingEnrichmentOperator.jsx","components/Operator/DereferencingEnrichmentOperator.jsx","components/Operator/NEREnrichmentOperator.jsx","components/Operator/CloneEnrichmentOperator.jsx","components/Operator/MergeEnrichmentOperator.jsx","components/Operator/GeoFusionEnrichmentOperator.jsx","components/Operator/SparqlUpdateEnrichmentOperator.jsx","components/Operator/GeoDistanceEnrichmentOperator.jsx","components/Operator/AuthorityConformationEnrichmentOperator.jsx","components/Operator/PredicateConformationEnrichmentOperator.jsx","views/Dashboard.jsx","layouts/Admin.jsx","routes.js","components/Navbars/DemoNavbar.jsx","components/Footer/Footer.jsx","index.js"],"names":["module","exports","__webpack_require__","p","FileModelReader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isSelected","handleChange","event","setState","defineProperty","target","name","value","handleFromUriChange","fromUri","handleFromPathChange","fromPath","toggle","console","log","modal","state","submitFormData","properties","node","parentCallback","endpoints","showForm","readerCount","that","assertThisInitialized","name_widget","addWidget","v","setProperty","document","getElementById","fromUriWidget","fromPathWidget","widgets_up","size","addOutput","title","color","bgcolor","onNodeAdded","react_default","a","createElement","Card","className","CardTitle","tag","CardBody","Form","FormGroup","Label","Input","type","onChange","handleName","id","CardFooter","Button","onClick","React","Component","FileModelWriter","submitForm","outputFile","outputFormat","addInput","getInputData","undefined","setOutputData","SparqlModelReader","fromEndpoint","useSparqlDescribeOf","useSparqlConstruct","sparqlDescribeOf","fetch","then","response","json","content","_this$state$endpoints","obj","prop","sparql","length","i","status","access_url","push","apply","toConsumableArray","keys","placeholder","required","options","label","FilterEnrichmentOperator","prevState","dropdownOpen","selector","resource","sparqlConstructQuery","handleSelectChange","selectedOption","handleRadioChange","radioOption","showSelector","preventDefault","showSelectors","name_widget_1","combo_widget","values","selector_combo_widget","check","checked","react_select_browser_esm","LinkingEnrichmentOperator","selectMode","specFile","linksPart","linkSpecification","linkingPredicate","threshold","DereferencingEnrichmentOperator","lookUpPrefix","dereferencingProperty","importProperty","NEREnrichmentOperator","neType","literalProperty","foxUrl","askEndpoint","CloneEnrichmentOperator","operatorName","MergeEnrichmentOperator","node_1","node_2","GeoFusionEnrichmentOperator","fusionAction","mergeOtherStatements","SparqlUpdateEnrichmentOperator","sparqlUpdateQuery","GeoDistanceEnrichmentOperator","selectPredicate","distancePredicate","AuthorityConformationEnrichmentOperator","sourceSubjectAuthority","targetSubjectAuthority","PredicateConformationEnrichmentOperator","sourcePredicate","targetPredicate","N3","require","DataFactory","namedNode","literal","defaultGraph","BASE_URI","window","location","hostname","port","Dashboard","getBaseUrl","RegExp","exec","href","callbackFunction","formProperties","showNode","quadOb","componentArray","map","comp","key","includes","src","LiteGraph","registerNodeType","url","toggleDropdown","show","getOutputLinks","link","outputs","links","nodeLink","link_id","linkInGraph","graph","getNodeById","target_id","getInputLink","inputLinkInGraph1","inputs","inputLinkInGraph2","inputOriginNode1","origin_id","inputOriginNode2","first","second","inputLinkId","inputLinkInGraph","saveConfig","data","serialize","writer","quad","Writer","prefixes","format","Parser","blankNodePrefix","nodes","addQuad","split","list","originInputNode","blank","predicate","object","distancePredimportPropertyicate","end","error","result","submitConfig","downloadResults","index","requestID","availableFiles","blob","URL","createObjectURL","download","click","Blob","file","File","formData","FormData","append","method","body","res","code","visible","requestId","showLogButton","interval","setInterval","getStatusForRequest","clearInterval","requestCompleteModal","showConfigButton","getResults","showLogs","getFilteredOptions","afterFilteredSuggestions","prefixOptions","filter","toLowerCase","userInput","selectedPrefix","namespace","contexts","isDisabled","handleNamespaceChange","addNewPrefixes","e","concat","saveResults","showResultModal","toggleResultModal","toggleRequestCompleteModal","LGraph","outputLinks","config","isModalOpen","showComponent","nodeArr","input1","input2","example","foaf","dbpedia","deer","fcage","geo","owl","rdf","rdfs","xsd","form","Reader_FileModelReader","Writer_FileModelWriter","Operator_FilterEnrichmentOperator","Operator_LinkingEnrichmentOperator","Operator_NEREnrichmentOperator","Operator_DereferencingEnrichmentOperator","Operator_GeoFusionEnrichmentOperator","Operator_AuthorityConformationEnrichmentOperator","Operator_PredicateConformationEnrichmentOperator","Operator_GeoDistanceEnrichmentOperator","Operator_SparqlUpdateEnrichmentOperator","Operator_MergeEnrichmentOperator","Operator_CloneEnrichmentOperator","Reader_SparqlModelReader","_this2","graphCanvas","LGraphCanvas","start","onShowNodePanel","show_info","parser","text","parse","_this3","_","opt","Modal","isOpen","ModalHeader","ModalBody","Table","style","Row","Col","lg","md","sm","xs","react","Dropdown","suggestions","DropdownItem","disabled","addPrefix","Badge","variant","CardHeader","height","width","marginLeft","ref","registered_node_types","searchbox_extras","ps","routes","path","icon","component","layout","Header","bind","dropdownToggle","sidebarToggle","createRef","brandName","indexOf","documentElement","classList","current","innerWidth","addEventListener","updateColor","history","pathname","Navbar","expand","Container","fluid","NavbarBrand","alt","NavbarToggler","Collapse","navbar","Footer","default","handleActiveClick","activeColor","handleBgClick","backgroundColor","mainPanel","navigator","platform","PerfectScrollbar","destroy","action","scrollTop","scrollingElement","Navbars_DemoNavbar","react_router","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","render","layouts_Admin","to"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oaCmNzBC,cA9Lb,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAHRQ,YAAa,EAEMP,EAiFnBQ,aAAe,SAACC,GACdT,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAnFnBd,EAyFnBe,oBAAsB,SAACN,GACrBT,EAAKU,SAAS,CACZM,QAASP,EAAMG,OAAOE,SA3FPd,EA8FnBiB,qBAAuB,SAACR,GACtBT,EAAKU,SAAS,CACZQ,SAAUT,EAAMG,OAAOE,SAhGRd,EAoGnBmB,OAAS,WACPC,QAAQC,IAAI,UACZrB,EAAKU,SAAS,CACZY,OAAQtB,EAAKuB,MAAMD,SAvGJtB,EA2GnBwB,eAAiB,WAEf,IAAIC,EAAa,CACfC,KAAM5B,EACNe,KAAMb,EAAKuB,MAAMV,KACjBG,QAAShB,EAAKuB,MAAMP,QACpBE,SAAUlB,EAAKuB,MAAML,UAGvBlB,EAAKD,MAAM4B,eAAeF,IAjH1BzB,EAAKyB,WAAa,CAChBZ,KAAM,GACNG,QAAS,GACTE,SAAU,IAGZlB,EAAKuB,MAAQ,CACXK,UAAW,GACXC,SAAU,GACVC,YAAa,EACbjB,KAAM,GACNG,QAAS,GACTE,SAAU,GACVI,OAAO,GAGT,IAAIS,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAnBS,OAqBjBA,EAAKiC,YAAcjC,EAAKkC,UACtB,OACA,cACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,GAILJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,gBAC1BD,SAASC,eAAe,cAAcxB,MAAQqB,IAL9CJ,EAAKK,YAAY,OAAQjC,KAAKoB,MAAMV,QAS1Cb,EAAKuC,cAAgBvC,EAAKkC,UACxB,OACA,eACAlC,EAAKyB,WAAWT,QAChB,SAAUmB,GACHA,IAGLJ,EAAKK,YAAY,UAAWD,GACxBE,SAASC,eAAe,aAC1BD,SAASC,eAAe,WAAWxB,MAAQqB,MAKjDnC,EAAKwC,eAAiBxC,EAAKkC,UACzB,OACA,gBACAlC,EAAKyB,WAAWP,SAChB,SAAUiB,GACHA,IAGLJ,EAAKK,YAAY,WAAYD,GACzBE,SAASC,eAAe,cAC1BD,SAASC,eAAe,YAAYxB,MAAQqB,MAKlDnC,EAAKyC,YAAa,EAClBzC,EAAK0C,KAAO,CAAC,IAAK,IAClB1C,EAAK2C,UAAU,SAAU,QACzB3C,EAAK4C,MAAQ,oBACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UAEf9C,EAAK+C,YAAc,SAACrB,GAClBK,EAAKK,YAAY,OAAQ,UAAYpC,EAAKuB,MAAMO,aAChDC,EAAKrB,SAAS,CACZoB,YAAa9B,EAAKuB,MAAMO,YAAc,KA5EzB9B,wEAwHjB,OACEgD,EAAAC,EAAAC,cAAA,WAeEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,MAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAK2D,WACfC,GAAG,aACHlD,KAAK,UAGTmC,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,qBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKY,oBACfgD,GAAG,UACHlD,KAAK,aAGTmC,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,sBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKc,qBACf8C,GAAG,WACHlD,KAAK,gBAKbmC,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKqB,gBAHhB,kBAnLkB2C,IAAMC,WCsJrBC,cAnJb,SAAAA,EAAYtE,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,IACjBrE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoE,GAAA/D,KAAAH,KAAMJ,KAyERS,aAAe,SAACC,GACd,IAAIK,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KA7ENd,EAiFnBsE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAM2C,EACNxD,KAAMb,EAAKuB,MAAL,KACNgD,WAAYvE,EAAKuB,MAAL,WACZiD,aAAcxE,EAAKuB,MAAL,cAGhBvB,EAAKD,MAAM4B,eAAeF,IAtF1BzB,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACN0D,WAAY,SACZC,aAAc,GAGhB,IAAIzC,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAVS,OAYjBA,EAAKiC,YAAcjC,EAAKkC,UACtB,OACA,cACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAKiC,YAAcjC,EAAKkC,UACtB,OACA,kBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,aAAcD,GAC3BE,SAASC,eAAe,gBAC1BD,SAASC,eAAe,cAAcxB,MAAQqB,MAKpDnC,EAAKiC,YAAcjC,EAAKkC,UACtB,OACA,oBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,eAAgBD,GAC7BE,SAASC,eAAe,kBAC1BD,SAASC,eAAe,gBAAgBxB,MAAQqB,MAKtDnC,EAAKyC,YAAa,EAClBzC,EAAK0C,KAAO,CAAC,IAAK,IAElB1C,EAAK4C,MAAQ,oBACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UA9DE9C,2EAkEjB,IAAIiD,EAAI9C,KAAKuE,aAAa,QAChBC,IAAN1B,IACFA,EAAI,GAGN9C,KAAKyE,cAAc,IAAK3B,oCAsBxB,OACED,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,OACLkD,GAAG,UAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,oBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,aACLkD,GAAG,gBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,sBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,eACLkD,GAAG,oBAKXf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKmE,YAHhB,iBAvIoBH,IAAMC,mBCkMrBS,cArMb,SAAAA,EAAY9E,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IACjB7E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,KAAMJ,KA+GRS,aAAe,SAACC,GACd,IAAIK,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KAnHNd,EAuHnBsE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAMmD,EACNhE,KAAMb,EAAKuB,MAAL,KACNuD,aAAc9E,EAAKuB,MAAL,aACdwD,oBAAqB/E,EAAKuB,MAAL,oBACrByD,mBAAoBhF,EAAKuB,MAAL,oBAGtBvB,EAAKD,MAAM4B,eAAeF,IA9H1BzB,EAAKyB,WAAa,CAChBZ,KAAM,GACNiE,aAAc,GACdG,iBAAkB,GAClBD,mBAAoB,IAGtBhF,EAAKuB,MAAQ,CACXK,UAAW,GACXC,UAAU,GAEZ,IAAIE,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAbS,OAejBkF,MAAM,mBACHC,KAAK,SAAUC,GACd,OAAOA,EAASC,SAEjBF,KAAK,SAACG,GAAY,IAAAC,EACjBnE,QAAQC,IAAIiE,GACZ,IAAIE,EAAM,GACV,IAAK,IAAIC,KAAQH,EACf,GAAIA,EAAQG,GAAMC,OAAOC,OACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAQG,GAAMC,OAAOC,OAAQC,IACR,OAAnCN,EAAQG,GAAMC,OAAOE,GAAGC,SAC1BL,EAAIF,EAAQG,GAAMC,OAAOE,GAAGE,aAAc,IAKlDP,EAAAvF,EAAKuB,MAAMK,WAAUmE,KAArBC,MAAAT,EAAAtF,OAAAgG,EAAA,EAAAhG,CAA6BA,OAAOiG,KAAKV,OAG7CxF,EAAKiC,YAAcjC,EAAKkC,UACtB,OACA,cACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAgB9CnC,EAAK8E,aAAe9E,EAAKkC,UACvB,OACA,oBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,eAAgBD,GAC7BE,SAASC,eAAe,kBAC1BD,SAASC,eAAe,gBAAgBxB,MAAQqB,MAKtDnC,EAAKiF,iBAAmBjF,EAAKkC,UAC3B,OACA,2BACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,mBAAoBD,GACjCE,SAASC,eAAe,sBAC1BD,SAASC,eAAe,oBAAoBxB,MAAQqB,MAI1DnC,EAAKgF,mBAAqBhF,EAAKkC,UAC7B,OACA,0BACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,qBAAsBD,GACnCE,SAASC,eAAe,wBAC1BD,SAASC,eAAe,sBAAsBxB,MAAQqB,MAK5DnC,EAAKyC,YAAa,EAClBzC,EAAK0C,KAAO,CAAC,IAAK,IAClB1C,EAAK2C,UAAU,SAAU,QACzB3C,EAAK4C,MAAQ,sBACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UA7GE9C,wEAmIjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OACLuC,YAAY,YACZtC,SAAU1D,KAAKK,aACfK,KAAK,OACLkD,GAAG,OACHqC,UAAQ,KAGZpD,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,uBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OACLuC,YAAY,oBACZtC,SAAU1D,KAAKK,aACfK,KAAK,eACLkD,GAAG,eACHqC,UAAQ,KAGZpD,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,gCACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OACLuC,YAAY,2BACZtC,SAAU1D,KAAKK,aACfK,KAAK,sBACLkD,GAAG,yBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,6BACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,WACLuC,YAAY,0BACZtC,SAAU1D,KAAKK,aACfK,KAAK,qBACLkD,GAAG,0BAKXf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKmE,YAHhB,iBAzLsBH,IAAMC,mBCAhCiC,EAAU,CACd,CAAEvF,MAAO,UAAWwF,MAAO,WAC3B,CAAExF,MAAO,YAAawF,MAAO,aAC7B,CAAExF,MAAO,SAAUwF,MAAO,WA2RbC,cAvRb,SAAAA,EAAYxG,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoG,IACjBvG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsG,GAAAjG,KAAAH,KAAMJ,KAqIRoB,OAAS,WACPnB,EAAKU,SAAS,SAAC8F,GAAD,MAAgB,CAC5BC,cAAeD,EAAUC,iBAxIVzG,EA4InBsE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAM6E,EACN1F,KAAMb,EAAKuB,MAAL,KACNmF,SAAU1G,EAAKuB,MAAL,SACVoF,SAAU3G,EAAKuB,MAAL,SACVqF,qBAAsB5G,EAAKuB,MAAL,sBAGxBvB,EAAKD,MAAM4B,eAAeF,IArJTzB,EAwJnB6G,mBAAqB,SAACC,GACpB9G,EAAKU,SAAS,CAAEoG,iBAAgBJ,SAAUI,EAAehG,SAzJxCd,EA4JnB+G,kBAAoB,SAACtG,GACnBT,EAAKU,SAAS,CACZsG,YAAavG,EAAMG,OAAOE,QAGD,aAAvBL,EAAMG,OAAOE,MACfd,EAAKU,SAAS,CACZuG,cAAc,IAEgB,yBAAvBxG,EAAMG,OAAOE,OACtBd,EAAKU,SAAS,CACZuG,cAAc,KAvKDjH,EA4KnBQ,aAAe,SAACC,GACdA,EAAMyG,iBACN,IAAIpG,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KA9KvBd,EAAKuB,MAAQ,CACX4F,eAAe,EACfvF,UAAW,GACX6E,cAAc,EACdQ,cAAc,EACdH,eAAgB,YAGlB5B,MAAM,mBACHC,KAAK,SAAUC,GACd,OAAOA,EAASC,SAEjBF,KAAK,SAACG,GAAY,IAAAC,EACjBnE,QAAQC,IAAIiE,GACZ,IAAIE,EAAM,GACV,IAAK,IAAIC,KAAQH,EACf,GAAIA,EAAQG,GAAMC,OAAOC,OACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAQG,GAAMC,OAAOC,OAAQC,IACR,OAAnCN,EAAQG,GAAMC,OAAOE,GAAGC,SAC1BL,EAAIF,EAAQG,GAAMC,OAAOE,GAAGE,aAAc,IAKlDP,EAAAvF,EAAKuB,MAAMK,WAAUmE,KAArBC,MAAAT,EAAAtF,OAAAgG,EAAA,EAAAhG,CAA6BA,OAAOiG,KAAKV,OAG7CxF,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACNoG,aAAc,GACdP,SAAU,GACVC,SAAU,IAGZ,IAAI5E,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GArCS,OAwCjBA,EAAKoH,cAAgBpH,EAAKkC,UACxB,OACA,OACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAKqH,aAAerH,EAAKkC,UACvB,QACA,GACA,SACA,SAAUC,GACHA,IAGLJ,EAAKK,YAAY,eAAgBD,GAC7BE,SAASC,eAAe,kBAC1BD,SAASC,eAAe,gBAAgBxB,MAAQqB,KAGpD,CAAEmF,OAAQ,CAAC,YAAa,qBAa1BtH,EAAKuH,sBAAwBvH,EAAKkC,UAChC,QACA,GACA,SACA,SAAUC,GACHA,IAGLJ,EAAKK,YAAY,WAAYD,GACzBE,SAASC,eAAe,cAC1BD,SAASC,eAAe,YAAYxB,MAAQqB,KAGhD,CAAEmF,OAAQ,CAAC,UAAW,YAAa,YAGrCtH,EAAKiC,YAAcjC,EAAKkC,UACtB,OACA,eACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,WAAYD,GACzBE,SAASC,eAAe,cAC1BD,SAASC,eAAe,YAAYxB,MAAQqB,MAKlDnC,EAAKiC,YAAcjC,EAAKkC,UACtB,OACA,eACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,uBAAwBD,GACrCE,SAASC,eAAe,0BAC1BD,SAASC,eAAe,wBAAwBxB,MAAQqB,MAK9DnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,6BACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UAnIE9C,wEAqLjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,MAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OACLC,SAAU1D,KAAKK,aACf2F,YAAY,YACZtF,KAAK,OACLkD,GAAG,UAIPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWH,IAAI,YACbN,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAW+D,OAAK,GACdxE,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAO8D,OAAK,GACVxE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,QACL/C,KAAK,SACLC,MAAM,WACN+C,SAAU1D,KAAK4G,kBACfU,QAAoC,aAA3BtH,KAAKoB,MAAMyF,cACnB,IAPL,aAWFhE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAW+D,OAAK,GACdxE,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAO8D,OAAK,GACVxE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,QACL/C,KAAK,SACLC,MAAM,uBACN+C,SAAU1D,KAAK4G,kBACfU,QAAoC,yBAA3BtH,KAAKoB,MAAMyF,cACnB,IAPL,qBAaH7G,KAAKoB,MAAM0F,aACVjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,iBACAV,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACE5G,MAAOX,KAAKoB,MAAMuF,eAClBjD,SAAU1D,KAAK0G,mBACfR,QAASA,EACTxF,KAAK,WACLkD,GAAG,cAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OACLC,SAAU1D,KAAKK,aAEfK,KAAK,WACLkD,GAAG,eAKTf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,6BACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,WAELC,SAAU1D,KAAKK,aACfK,KAAK,uBACLkD,GAAG,4BAMbf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKmE,YAHhB,iBA3Q6BH,IAAMC,WCCvCiC,EAAU,CACd,CAAEvF,MAAO,MAAOwF,MAAO,OACvB,CAAExF,MAAO,WAAYwF,MAAO,YAC5B,CAAExF,MAAO,WAAYwF,MAAO,YAC5B,CAAExF,MAAO,OAAQwF,MAAO,SA2SXqB,cAvSb,SAAAA,EAAY5H,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,IACjB3H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0H,GAAArH,KAAAH,KAAMJ,KAgJRoB,OAAS,WACPnB,EAAKU,SAAS,SAAC8F,GAAD,MAAgB,CAC5BC,cAAeD,EAAUC,iBAnJVzG,EAuJnB6G,mBAAqB,SAACC,GACpB9G,EAAKU,SAAS,CAAEoG,iBAAgBc,WAAYd,EAAehG,SAxJ1Cd,EA2JnBsE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAMiG,EACN9G,KAAMb,EAAKuB,MAAL,KACNsG,SAAU7H,EAAKuB,MAAL,SACVuG,UAAW9H,EAAKuB,MAAL,YACXqG,WAAY5H,EAAKuB,MAAL,WACZwG,kBAAmB/H,EAAKuB,MAAL,kBACnByG,iBAAkBhI,EAAKuB,MAAL,iBAClB0G,UAAWjI,EAAKuB,MAAL,WAGbvB,EAAKD,MAAM4B,eAAeF,IAvKTzB,EA0KnBQ,aAAe,SAACC,GACd,IAAIK,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KA7KNd,EAiLnB+G,kBAAoB,SAACtG,GACnBT,EAAKU,SAAS,CACZsG,YAAavG,EAAMG,OAAOE,SAjL5Bd,EAAKuB,MAAQ,CACX4F,eAAe,EACfL,eAAgB,MAGlB9G,EAAKyE,SAAS,SAAU,QACxBzE,EAAKyE,SAAS,SAAU,QAExBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACNgH,SAAU,GACVC,UAAW,GACXC,kBAAmB,GACnBC,iBAAkB,GAClBC,UAAW,IAGb,IAAIlG,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAnBS,OAqBjBA,EAAKiC,YAAcjC,EAAKkC,UACtB,OACA,OACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAK6H,SAAW7H,EAAKkC,UACnB,OACA,gBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,WAAYD,GACzBE,SAASC,eAAe,cAC1BD,SAASC,eAAe,YAAYxB,MAAQqB,MAKlDnC,EAAK8H,UAAY9H,EAAKkC,UACpB,QACA,iBACA,SACA,SAAUC,GACHA,IAGLJ,EAAKK,YAAY,YAAaD,GAC1BE,SAASC,eAAe,eAC1BD,SAASC,eAAe,aAAaxB,MAAQqB,KAGjD,CAAEmF,OAAQ,CAAC,SAAU,YAavBtH,EAAK4H,WAAa5H,EAAKkC,UACrB,QACA,kBACA,SACA,SAAUC,GACHA,IAGLJ,EAAKK,YAAY,aAAcD,GAC3BE,SAASC,eAAe,gBAC1BD,SAASC,eAAe,cAAcxB,MAAQqB,KAGlD,CAAEmF,OAAQ,CAAC,MAAO,WAAY,WAAY,UAG5CtH,EAAK+H,kBAAoB/H,EAAKkC,UAC5B,OACA,yBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,oBAAqBD,GAClCE,SAASC,eAAe,uBAC1BD,SAASC,eAAe,qBAAqBxB,MAAQqB,MAK3DnC,EAAKgI,iBAAmBhI,EAAKkC,UAC3B,OACA,wBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,mBAAoBD,GACjCE,SAASC,eAAe,sBAC1BD,SAASC,eAAe,oBAAoBxB,MAAQqB,MAK1DnC,EAAKiI,UAAYjI,EAAKkC,UACpB,OACA,iBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,YAAaD,GAC1BE,SAASC,eAAe,eAC1BD,SAASC,eAAe,aAAaxB,MAAQqB,MAKnDnC,EAAK2C,UAAU,UAAW,QAE1B3C,EAAK4C,MAAQ,8BACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UA9IE9C,wEAwLjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OACLC,SAAU1D,KAAKK,aAEfK,KAAK,OACLkD,GAAG,UAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,mBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,WACLkD,GAAG,cAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWH,IAAI,YACbN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAW+D,OAAK,GACdxE,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAO8D,OAAK,GACVxE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,QACL/C,KAAK,SACLC,MAAM,SACN+C,SAAU1D,KAAK4G,kBACfU,QAAoC,WAA3BtH,KAAKoB,MAAMyF,cACnB,IAPL,WAWFhE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAW+D,OAAK,GACdxE,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAO8D,OAAK,GACVxE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,QACL/C,KAAK,SACLC,MAAM,SACN+C,SAAU1D,KAAK4G,kBACfU,QAAoC,WAA3BtH,KAAKoB,MAAMyF,cACnB,IAPL,YAYJhE,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,oBACAV,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACE5G,MAAOX,KAAKoB,MAAMuF,eAClBjD,SAAU1D,KAAK0G,mBACfR,QAASA,EACTxF,KAAK,aACLkD,GAAG,gBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,4BACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OACLuC,YAAY,yBACZtC,SAAU1D,KAAKK,aACfK,KAAK,oBACLkD,GAAG,uBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,2BACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,mBACLkD,GAAG,sBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,mBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,YACLkD,GAAG,iBAKXf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKmE,YAHhB,iBA3R8BH,IAAMC,WC+G/B8D,cAtHb,SAAAA,EAAYnI,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+H,IACjBlI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiI,GAAA5H,KAAAH,KAAMJ,KACDwB,MAAQ,CACX4F,eAAe,GAGjBnH,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACNsH,aAAc,GACdC,sBAAuB,GACvBC,eAAgB,IAGlB,IAAItG,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAdS,OAiBjBA,EAAKa,KAAOb,EAAKkC,UACf,OACA,gBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,GAGLJ,EAAKK,YAAY,OAAQD,KAI7BnC,EAAKmI,aAAenI,EAAKkC,UACvB,OACA,oBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,GAGLJ,EAAKK,YAAY,eAAgBD,KAIrCnC,EAAKoI,sBAAwBpI,EAAKkC,UAChC,OACA,6BACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,GAGLJ,EAAKK,YAAY,wBAAyBD,KAI9CnC,EAAKqI,eAAiBrI,EAAKkC,UACzB,OACA,sBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,GAGLJ,EAAKK,YAAY,iBAAkBD,KAIvCnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,oCACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UArEE9C,wEAyEjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,uBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,UAITZ,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,+BACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,UAITZ,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,wBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,YAMbZ,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,WAFR,iBA1GoCsB,IAAMC,WCL9CiC,EAAU,CACd,CAAEvF,MAAO,WAAYwF,MAAO,YAC5B,CAAExF,MAAO,SAAUwF,MAAO,UAC1B,CAAExF,MAAO,eAAgBwF,MAAO,gBAChC,CAAExF,MAAO,MAAOwF,MAAO,QA6MVgC,cAzMb,SAAAA,EAAYvI,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACjBtI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAAhI,KAAAH,KAAMJ,KAoGR8G,mBAAqB,SAACC,GACpB9G,EAAKU,SAAS,CAAE6H,OAAQzB,EAAehG,SAtGtBd,EAyGnBsE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAM4G,EACNzH,KAAMb,EAAKuB,MAAL,KACNiH,gBAAiBxI,EAAKuB,MAAL,gBACjB8G,eAAgBrI,EAAKuB,MAAL,eAChBgH,OAAQvI,EAAKuB,MAAL,OACRkH,OAAQzI,EAAKuB,MAAL,QAGVvB,EAAKD,MAAM4B,eAAeF,IAnHTzB,EAsHnBQ,aAAe,SAACC,GACd,IAAIK,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KAvHvBd,EAAKuB,MAAQ,CACX4F,eAAe,EACfL,eAAgB,MAGlB9G,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACN2H,gBAAiB,GACjBH,eAAgB,GAChBE,OAAQ,WACRE,QAAQ,GAGV,IAAI1G,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAhBS,OAkBjBA,EAAKwI,gBAAkBxI,EAAKkC,UAC1B,OACA,OACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAKwI,gBAAkBxI,EAAKkC,UAC1B,OACA,uBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,kBAAmBD,GAChCE,SAASC,eAAe,qBAC1BD,SAASC,eAAe,mBAAmBxB,MAAQqB,MAKzDnC,EAAKqI,eAAiBrI,EAAKkC,UACzB,OACA,sBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,iBAAkBD,GAC/BE,SAASC,eAAe,oBAC1BD,SAASC,eAAe,sBAAsBxB,MAAQqB,MAK5DnC,EAAKuI,OAASvI,EAAKkC,UACjB,QACA,GACA,WACA,SAAUC,GACHA,IAGLJ,EAAKK,YAAY,SAAUD,GACvBE,SAASC,eAAe,YAC1BD,SAASC,eAAe,UAAUxB,MAAQqB,KAG9C,CAAEmF,OAAQ,CAAC,WAAY,SAAU,eAAgB,SAGnDtH,EAAK0I,YAAc1I,EAAKkC,UACtB,OACA,mBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,SAAUD,GACvBE,SAASC,eAAe,YAC1BD,SAASC,eAAe,UAAUxB,MAAQqB,MAKhDnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,0BACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UAlGE9C,wEA8HjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,MAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,OACLkD,GAAG,UAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,yBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,kBACLkD,GAAG,qBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,wBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,iBACLkD,GAAG,oBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,eACAV,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACE5G,MAAOX,KAAKoB,MAAMuF,eAClBjD,SAAU1D,KAAK0G,mBACfR,QAASA,EAETtC,GAAG,SACHlD,KAAK,YAGTmC,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,iBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,SACLkD,GAAG,cAKXf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKmE,YAHhB,iBA7L0BH,IAAMC,WCiB3BuE,cArCb,SAAAA,EAAY5I,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwI,IACjB3I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0I,GAAArI,KAAAH,KAAMJ,KACDwB,MAAQ,CACX4F,eAAe,GAGjBnH,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,IAGR,IAAIkB,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAXS,OAcjBA,EAAK4I,aAAe5I,EAAKkC,UACvB,OACA,gBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,4BACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UAjCE9C,6BADiBmE,IAAMC,WCgD7ByE,cA/Cb,SAAAA,EAAY9I,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0I,IACjB7I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4I,GAAAvI,KAAAH,KAAMJ,KACDwB,MAAQ,CACX4F,eAAe,GAGjBnH,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACNiI,OAAQ,GACRC,OAAQ,IAGV,IAAIhH,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAbS,OAgBjBA,EAAK8I,OAAS9I,EAAKkC,UACjB,OACA,cACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,GAGLJ,EAAKK,YAAY,SAAUD,KAG/BnC,EAAK+I,OAAS/I,EAAKkC,UACjB,OACA,cACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,GAGLJ,EAAKK,YAAY,SAAUD,KAI/BnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,4BACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UA3CE9C,6BADiBmE,IAAMC,WCkBtCiC,EAAU,CACd,CAAEvF,MAAO,QAASwF,MAAO,SACzB,CAAExF,MAAO,QAASwF,MAAO,SACzB,CAAExF,MAAO,UAAWwF,MAAO,WAC3B,CAAExF,MAAO,mBAAoBwF,MAAO,qBAwJvB0C,cArJb,SAAAA,EAAYjJ,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6I,IACjBhJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+I,GAAA1I,KAAAH,KAAMJ,KAqER8G,mBAAqB,SAACC,GACpB9G,EAAKU,SAAS,CAAEoG,eAAgBA,EAAehG,QAC/CM,QAAQC,IAAR,mBAAgCyF,IAxEf9G,EA2EnBsE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAMsH,EACNnI,KAAMb,EAAKuB,MAAL,KACN0H,aAAcjJ,EAAKuB,MAAL,eACd2H,qBAAsBlJ,EAAKuB,MAAL,sBAGxBvB,EAAKD,MAAM4B,eAAeF,IAnFTzB,EAsFnBQ,aAAe,SAACC,GACd,IAAIK,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KAvFvBd,EAAKuB,MAAQ,CACX4F,eAAe,EACfL,eAAgB,MAGlB9G,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACNoI,aAAc,GACdC,qBAAsB,IAGxB,IAAInH,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAdS,OAiBjBA,EAAKa,KAAOb,EAAKkC,UACf,OACA,gBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAKiJ,aAAejJ,EAAKkC,UACvB,QACA,GACA,SACA,SAAUC,GACHA,IAGLJ,EAAKK,YAAY,eAAgBD,GAC7BE,SAASC,eAAe,kBAC1BD,SAASC,eAAe,gBAAgBxB,MAAQqB,KAGpD,CAAEmF,OAAQ,CAAC,QAAS,QAAS,UAAW,sBAG1CtH,EAAKkJ,qBAAuBlJ,EAAKkC,UAC/B,OACA,4BACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,uBAAwBD,GACrCE,SAASC,eAAe,0BAC1BD,SAASC,eAAe,wBAAwBxB,MAAQqB,MAK9DnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,gCACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UAnEE9C,wEA8FjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OACLC,SAAU1D,KAAKK,aAEfK,KAAK,OACLkD,GAAG,UAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,sBACAV,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACE5G,MAAOX,KAAKoB,MAAMuF,eAClBjD,SAAU1D,KAAK0G,mBACfR,QAASA,EAETxF,KAAK,eACLkD,GAAG,kBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,gCACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,uBACLkD,GAAG,4BAKXf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKmE,YAHhB,iBAzIgCH,IAAMC,WC2GjC+E,cAjHb,SAAAA,EAAYpJ,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgJ,IACjBnJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkJ,GAAA7I,KAAAH,KAAMJ,KAkDRS,aAAe,SAACC,GACd,IAAIK,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KAtDNd,EA0DnBsE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAMyH,EACNtI,KAAMb,EAAKuB,MAAL,KACN6H,kBAAmBpJ,EAAKuB,MAAL,mBAGrBvB,EAAKD,MAAM4B,eAAeF,IA/D1BzB,EAAKuB,MAAQ,CACX4F,eAAe,GAGjBnH,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACNuI,kBAAmB,IAGrB,IAAIrH,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAZS,OAcjBA,EAAKoJ,kBAAoBpJ,EAAKkC,UAC5B,OACA,OACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAKoJ,kBAAoBpJ,EAAKkC,UAC5B,OACA,yBACAlC,EAAKyB,WAAW2H,kBAChB,SAAUjH,GACHA,IAGLJ,EAAKK,YAAY,oBAAqBD,GAClCE,SAASC,eAAe,uBAC1BD,SAASC,eAAe,qBAAqBxB,MAAQqB,MAK3DnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,oCACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UAhDE9C,wEAqEjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,OACLkD,GAAG,UAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,4BACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,WACL/C,KAAK,oBACLkD,GAAG,oBAEHF,SAAU1D,KAAKK,kBAKvBwC,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKmE,YAHhB,iBArGmCH,IAAMC,WCyIpCiF,cA5Ib,SAAAA,EAAYtJ,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkJ,IACjBrJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoJ,GAAA/I,KAAAH,KAAMJ,KAkERuE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAM2H,EACNxI,KAAMb,EAAKuB,MAAL,KACN+H,gBAAiBtJ,EAAKuB,MAAL,gBACjBgI,kBAAmBvJ,EAAKuB,MAAL,mBAGrBvB,EAAKD,MAAM4B,eAAeF,IA3ETzB,EA8EnBQ,aAAe,SAACC,GACd,IAAIK,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KA/EvBd,EAAKuB,MAAQ,CACX4F,eAAe,GAGjBnH,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACNyI,gBAAiB,GACjBC,kBAAmB,IAGrB,IAAIxH,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAbS,OAejBA,EAAKsJ,gBAAkBtJ,EAAKkC,UAC1B,OACA,OACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAKsJ,gBAAkBtJ,EAAKkC,UAC1B,OACA,uBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,kBAAmBD,GAChCE,SAASC,eAAe,qBAC1BD,SAASC,eAAe,mBAAmBxB,MAAQqB,MAKzDnC,EAAKuJ,kBAAoBvJ,EAAKkC,UAC5B,OACA,yBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,oBAAqBD,GAClCE,SAASC,eAAe,uBAC1BD,SAASC,eAAe,qBAAqBxB,MAAQqB,MAK3DnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,kCACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UAhEE9C,wEAsFjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,OACLkD,GAAG,UAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,yBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,kBACLkD,GAAG,qBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,2BACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,oBACLkD,GAAG,6BAKXf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKmE,YAHhB,iBAhIkCH,IAAMC,WC8InCoF,cA7Ib,SAAAA,EAAYzJ,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqJ,IACjBxJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuJ,GAAAlJ,KAAAH,KAAMJ,KAmERuE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAM8H,EACN3I,KAAMb,EAAKuB,MAAL,KACNkI,uBAAwBzJ,EAAKuB,MAAL,uBACxBmI,uBAAwB1J,EAAKuB,MAAL,wBAG1BvB,EAAKD,MAAM4B,eAAeF,IA5ETzB,EA+EnBQ,aAAe,SAACC,GACd,IAAIK,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KAhFvBd,EAAKuB,MAAQ,CACX4F,eAAe,GAGjBnH,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACN4I,uBAAwB,GACxBC,uBAAwB,IAG1B,IAAI3H,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAbS,OAgBjBA,EAAKa,KAAOb,EAAKkC,UACf,OACA,gBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAKyJ,uBAAyBzJ,EAAKkC,UACjC,OACA,8BACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,yBAA0BD,GACvCE,SAASC,eAAe,4BAC1BD,SAASC,eAAe,0BAA0BxB,MAAQqB,MAKhEnC,EAAK0J,uBAAyB1J,EAAKkC,UACjC,OACA,8BACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,yBAA0BD,GACvCE,SAASC,eAAe,4BAC1BD,SAASC,eAAe,0BAA0BxB,MAAQqB,MAKhEnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,6CACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UAjEE9C,wEAuFjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,OACLkD,GAAG,UAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,iCACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,yBACLkD,GAAG,4BAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,iCACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,yBACLkD,GAAG,8BAKXf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,WAFR,iBAjI4CsB,IAAMC,WCoJ7CuF,cA7Ib,SAAAA,EAAY5J,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwJ,IACjB3J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0J,GAAArJ,KAAAH,KAAMJ,KAmERuE,WAAa,WACX,IAAI7C,EAAa,CACfC,KAAMiI,EACN9I,KAAMb,EAAKuB,MAAL,KACNqI,gBAAiB5J,EAAKuB,MAAL,gBACjBsI,gBAAiB7J,EAAKuB,MAAL,iBAGnBvB,EAAKD,MAAM4B,eAAeF,IA5ETzB,EA+EnBQ,aAAe,SAACC,GACd,IAAIK,EAAQL,EAAMG,OAAOE,MACzBd,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACGQ,EAAMG,OAAOC,KAAOC,KAhFvBd,EAAKuB,MAAQ,CACX4F,eAAe,GAGjBnH,EAAKyE,SAAS,QAAS,QACvBzE,EAAKyB,WAAa,CAChBZ,KAAM,GACN+I,gBAAiB,GACjBC,gBAAiB,IAGnB,IAAI9H,EAAI9B,OAAA+B,EAAA,EAAA/B,CAAAD,GAbS,OAgBjBA,EAAKa,KAAOb,EAAKkC,UACf,OACA,gBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,OAAQD,GACrBE,SAASC,eAAe,UAC1BD,SAASC,eAAe,QAAQxB,MAAQqB,MAK9CnC,EAAK4J,gBAAkB5J,EAAKkC,UAC1B,OACA,uBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,kBAAmBD,GAChCE,SAASC,eAAe,qBAC1BD,SAASC,eAAe,mBAAmBxB,MAAQqB,MAKzDnC,EAAK6J,gBAAkB7J,EAAKkC,UAC1B,OACA,uBACAlC,EAAKyB,WAAWZ,KAChB,SAAUsB,GACHA,IAGLJ,EAAKK,YAAY,kBAAmBD,GAChCE,SAASC,eAAe,qBAC1BD,SAASC,eAAe,mBAAmBxB,MAAQqB,MAKzDnC,EAAK2C,UAAU,SAAU,QAEzB3C,EAAK4C,MAAQ,6CACb5C,EAAK6C,MAAQ,UACb7C,EAAK8C,QAAU,UAjEE9C,wEAuFjB,OACEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,gBACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,OACLkD,GAAG,UAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,yBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,kBACLkD,GAAG,qBAGPf,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,yBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,OAELC,SAAU1D,KAAKK,aACfK,KAAK,kBACLkD,GAAG,uBAKXf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEb,UAAU,YACVP,MAAM,UACNqB,QAAS/D,KAAKmE,YAHhB,iBAjI4CH,IAAMC,+GC2CtD0F,GAAKC,EAAQ,KACXC,GAAgBF,GAAhBE,YACAC,GAAqCD,GAArCC,UAAWC,GAA0BF,GAA1BE,QAASC,GAAiBH,GAAjBG,aAEtBC,GAAWC,OAAOC,SAASC,SAAW,IAAMF,OAAOC,SAASE,KAE5DC,eACJ,SAAAA,EAAY1K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsK,IACjBzK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwK,GAAAnK,KAAAH,KAAMJ,KAgLR2K,WAAa,WAEX,OADS,IAAIC,OAAO,SACVC,KAAKP,OAAOC,SAASO,OAnLd7K,EAsLnB8K,iBAAmB,SAACrJ,GAClBL,QAAQC,IAAII,GACZzB,EAAKU,SAAS,CACZqK,eAAgBtJ,KAzLDzB,EA2OnBgL,SAAW,SAACC,GACVjL,EAAKuB,MAAM2J,eAAeC,IAAI,SAACC,EAAMC,GAC/BJ,EAAOK,SAASF,EAAKvK,QACvBuK,EAAKG,IAAI3I,MAAQwI,EAAKxI,MACtB4I,YAAUC,iBAAiBL,EAAKM,IAAKN,EAAKG,SA/O7BvL,EAoPnB2L,eAAiB,WACf3L,EAAKU,SAAS,CACZkL,MAAO5L,EAAKuB,MAAMqK,QAtPH5L,EA0PnB6L,eAAiB,SAACnK,GAChB,IAAK,IAAIoK,KAAQpK,EAAKqK,QACpB,GAAIrK,EAAKqK,QAAQD,GAAME,MACrB,IAAK,IAAIC,KAAYvK,EAAKqK,QAAQD,GAAME,MAAO,CAC7C,IAAIE,EAAUxK,EAAKqK,QAAQD,GAAME,MAAMC,GACnCE,EAAcnM,EAAKuB,MAAM6K,MAAMJ,MAAME,GACzC,GAAIC,EAIF,OAHkBnM,EAAKuB,MAAM6K,MAAMC,YACjCF,EAAYG,aAlQLtM,EA2QnBuM,aAAe,SAAC7K,GAEd,GADAN,QAAQC,IAAIK,GACM,uCAAdA,EAAKkC,KAA+C,CACtD,IAAI4I,EAAoBxM,EAAKuB,MAAM6K,MAAMJ,MAAMtK,EAAK+K,OAAO,GAAGX,MAC1DY,EAAoB1M,EAAKuB,MAAM6K,MAAMJ,MAAMtK,EAAK+K,OAAO,GAAGX,MAC9D,GAAIU,EACF,IAAIG,EAAmB3M,EAAKuB,MAAM6K,MAAMC,YACtCG,EAAkBI,WAClBnL,WAAWZ,KAEf,GAAI6L,EACF,IAAIG,EAAmB7M,EAAKuB,MAAM6K,MAAMC,YACtCK,EAAkBE,WAClBnL,WAAWZ,KAIf,OAFAO,QAAQC,IAAIsL,GAEL,CACLG,MAAOH,EACPI,OAAQF,GAGV,IAAK,IAAIf,KAAQpK,EAAK+K,OACpB,GAAI/K,EAAK+K,OAAOX,GAAMA,KAAM,CAC1B1K,QAAQC,IAAIK,EAAK+K,OAAOX,GAAMA,MAC9B,IAAIkB,EAActL,EAAK+K,OAAOX,GAAMA,KAChCmB,EAAmBjN,EAAKuB,MAAM6K,MAAMJ,MAAMgB,GAC9C,GAAIC,EAIF,OAHsBjN,EAAKuB,MAAM6K,MAAMC,YACrCY,EAAiBL,aAxSV5M,EAiTnBkN,WAAa,WACX,IAAIC,EAAOnN,EAAKuB,MAAM6K,MAAMgB,YASxBC,GAPWrD,GAAYsD,KACzBrD,GAAU,0CACVA,GAAU,uCACVC,GAAQ,QAAS,MACjBC,MAGW,IAAIL,GAAGyD,OAClB,CACEC,SAAUxN,EAAKuB,MAAMiM,UAEvB,CAAEC,OAAQ,eAGC,IAAI3D,GAAG4D,OAAO,CAAED,OAAQ,KAAME,gBAAiB,KAC5DvM,QAAQC,IAAIrB,EAAKuB,MAAMwJ,gBACvBoC,EAAKS,MAAMzC,IAAI,SAACzJ,EAAM2J,GAiBpB,GAhBAgC,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,mDACVA,GAAU,wBAA0BvI,EAAKkC,KAAKkK,MAAM,KAAK,KAavDpM,EAAK+K,OACP,GAAkB,uCAAd/K,EAAKkC,KAA+C,CACtD,IAAI6I,EAASzM,EAAKuM,aAAa7K,GAC/B2L,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,kCACVoD,EAAOU,KAAK,CACV9D,GAAU,oBAAsBwC,EAAOK,OACvC7C,GAAU,oBAAsBwC,EAAOM,eAGtC,CACL,IAAIiB,EAAkBhO,EAAKuM,aAAa7K,GACxC2L,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,kCACVA,GAAU,oBAAsB+D,EAAgBvM,WAAWZ,OAM/C,2BAAda,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAC6B,2BAAxC/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAE/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAME,WAAWZ,KAC7Ca,EAAKD,WAAWT,QAAUhB,EAAKuB,MAAMwJ,eAAe/J,QACpDU,EAAKD,WAAWP,SAAWlB,EAAKuB,MAAMwJ,eAAe7J,UAEnDQ,EAAKD,WAAWT,SAClBqM,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,gCACVC,GAAQxI,EAAKD,WAAWT,UAGxBU,EAAKD,WAAWP,UAClBmM,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,iCACVC,GAAQxI,EAAKD,WAAWP,YAMZ,6BAAdQ,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAC6B,6BAAxC/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAE/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAMwJ,eAAelK,KACjDa,EAAKD,WAAWqD,aAAe9E,EAAKuB,MAAMwJ,eAAejG,aACzDpD,EAAKD,WAAWwD,iBAAmBjF,EAAKuB,MAAMwJ,eAAehG,oBAC7DrD,EAAKD,WAAWuD,mBAAqBhF,EAAKuB,MAAMwJ,eAAe/F,oBAE7DtD,EAAKD,WAAWqD,cAClBuI,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,qCACVA,GAAUvI,EAAKD,WAAWqD,eAG1BpD,EAAKD,WAAWwD,kBAClBoI,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,4CACVA,GAAUvI,EAAKD,WAAWwD,mBAI1BvD,EAAKD,WAAWuD,oBAClBqI,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,2CACVC,GAAQxI,EAAKD,WAAWuD,sBAMZ,2BAAdtD,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAC6B,2BAAxC/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAE/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAMwJ,eAAelK,KACjDa,EAAKD,WAAW8C,WAAavE,EAAKuB,MAAMwJ,eAAexG,WACvD7C,EAAKD,WAAW+C,aAAexE,EAAKuB,MAAMwJ,eAAevG,cAEvD9C,EAAKD,WAAW8C,YAAc7C,EAAKD,WAAW+C,eAChD6I,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,mCACVC,GAAQxI,EAAKD,WAAW8C,aAG1B8I,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,qCACVC,GAAQxI,EAAKD,WAAW+C,iBAKZ,sCAAd9C,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAET,sCADF/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAG/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAMwJ,eAAelK,KACjDa,EAAKD,WAAWiF,SAAW1G,EAAKuB,MAAMwJ,eAAerE,SACrDhF,EAAKD,WAAWkF,SAAW3G,EAAKuB,MAAMwJ,eAAepE,SACrDjF,EAAKD,WAAWmF,qBAAuB5G,EAAKuB,MAAMwJ,eAAenE,sBAE/DlF,EAAKD,WAAWiF,SAClB2G,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,iCACVoD,EAAOY,MAAM,CACX,CACEC,UAAWjE,GACT,wBAA0BvI,EAAKD,WAAWiF,UAE5CyH,OAAQlE,GAAUvI,EAAKD,WAAWkF,cAI/BjF,EAAKD,WAAWmF,sBACzByG,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,6CACVC,GAAQxI,EAAKD,WAAWmF,wBAKZ,6CAAdlF,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAET,6CADF/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAG/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAME,WAAWZ,KAC7Ca,EAAKD,WAAW0G,aAAenI,EAAKuB,MAAMwJ,eAAe5C,aACzDzG,EAAKD,WAAW2G,sBAAwBpI,EAAKuB,MAAMwJ,eAAe3C,sBAClE1G,EAAKD,WAAW4G,eAAiBrI,EAAKuB,MAAMwJ,eAAe1C,gBAE7DgF,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,kCACVoD,EAAOY,MAAM,CACX,CACEC,UAAWjE,GAAU,iCACrBkE,OAAQjE,GAAQxI,EAAKD,WAAW0G,eAElC,CACE+F,UAAWjE,GACT,0CAEFkE,OAAQjE,GAAQxI,EAAKD,WAAW2G,wBAElC,CACE8F,UAAWjE,GAAU,mCACrBkE,OAAQjE,GAAQxI,EAAKD,WAAW4G,qBAOtB,yCAAd3G,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAET,yCADF/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAG/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAME,WAAWZ,KAC7Ca,EAAKD,WAAWwH,aAAejJ,EAAKuB,MAAMwJ,eAAe9B,aACzDvH,EAAKD,WAAWyH,qBAAuBlJ,EAAKuB,MAAMwJ,eAAe7B,sBAEnEmE,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,qCACVC,GAAQxI,EAAKD,WAAWwH,eAG1BoE,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,6CACVC,GAAQxI,EAAKD,WAAWyH,wBAKV,qDAAdxH,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAET,qDADF/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAG/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAME,WAAWZ,KAC7Ca,EAAKD,WAAWgI,uBAAyBzJ,EAAKuB,MAAMwJ,eAAetB,uBACnE/H,EAAKD,WAAWiI,uBAAyB1J,EAAKuB,MAAMwJ,eAAerB,wBAErE2D,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,kCACVoD,EAAOY,MAAM,CACX,CACEC,UAAWjE,GACT,+CAEFkE,OAAQlE,GAAUvI,EAAKD,WAAWgI,yBAEpC,CACEyE,UAAWjE,GACT,+CAEFkE,OAAQlE,GAAUvI,EAAKD,WAAWiI,6BAOxB,qDAAdhI,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAET,qDADF/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAG/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAME,WAAWZ,KAC7Ca,EAAKD,WAAWmI,gBAAkB5J,EAAKuB,MAAMwJ,eAAenB,gBAC5DlI,EAAKD,WAAWoI,gBAAkB7J,EAAKuB,MAAMwJ,eAAelB,iBAE9DwD,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,kCACVoD,EAAOY,MAAM,CACX,CACEC,UAAWjE,GAAU,wCACrBkE,OAAQjE,GAAQxI,EAAKD,WAAWmI,kBAElC,CACEsE,UAAWjE,GAAU,wCACrBkE,OAAQjE,GAAQxI,EAAKD,WAAWoI,sBAOtB,2CAAdnI,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAET,2CADF/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAG/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAME,WAAWZ,KAC7Ca,EAAKD,WAAW6H,gBAAkBtJ,EAAKuB,MAAMwJ,eAAezB,gBAC5D5H,EAAKD,WAAW8H,kBAAoBvJ,EAAKuB,MAAMwJ,eAAexB,mBAEhE8D,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,wCACVA,GAAUvI,EAAKD,WAAW6H,kBAE5B+D,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,0CACVA,GAAUvI,EAAKD,WAAW8H,qBAIZ,uCAAd7H,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAET,uCADF/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAG/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAMwJ,eAAelK,KACjDa,EAAKD,WAAWoG,SAAW7H,EAAKuB,MAAMwJ,eAAelD,SACrDnG,EAAKD,WAAWqG,UAAY9H,EAAKuB,MAAMwJ,eAAejD,UACtDpG,EAAKD,WAAWmG,WAAa5H,EAAKuB,MAAMwJ,eAAenD,WACvDlG,EAAKD,WAAWsG,kBAAoB/H,EAAKuB,MAAMwJ,eAAehD,kBAC9DrG,EAAKD,WAAWuG,iBAAmBhI,EAAKuB,MAAMwJ,eAAe/C,iBAC7DtG,EAAKD,WAAWwG,UAAYjI,EAAKuB,MAAMwJ,eAAe9C,WAExDoF,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,iCACVC,GAAQxI,EAAKD,WAAWoG,WAE1BwF,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,kCACVC,GAAQxI,EAAKD,WAAWqG,YAE1BuF,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,mCACVC,GAAQxI,EAAKD,WAAWmG,aAEtBlG,EAAKD,WAAWsG,mBAClBsF,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,0CACVC,GAAQxI,EAAKD,WAAWsG,oBAGxBrG,EAAKD,WAAWuG,kBAClBqF,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,yCACVC,GAAQxI,EAAKD,WAAWuG,mBAGxBtG,EAAKD,WAAWwG,WAClBoF,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,kCACVC,GAAQxI,EAAKD,WAAWwG,aAMZ,mCAAdvG,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAET,mCADF/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAG/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAME,WAAWZ,KAC7Ca,EAAKD,WAAW+G,gBAAkBxI,EAAKuB,MAAMwJ,eAAevC,gBAC5D9G,EAAKD,WAAW4G,eAAiBrI,EAAKuB,MAAMwJ,eAAe1C,eAC3D3G,EAAKD,WAAW8G,OAASvI,EAAKuB,MAAMwJ,eAAexC,OACnD7G,EAAKD,WAAWgH,OAASzI,EAAKuB,MAAMwJ,eAAetC,QAGrD4E,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,wCACVA,GAAUvI,EAAKD,WAAW+G,kBAE5B6E,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,uCACVA,GAAUvI,EAAKD,WAAW2M,kCAE5Bf,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,+BACVA,GAAUvI,EAAKD,WAAWgH,SAE5B4E,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,+BACVC,GAAQxI,EAAKD,WAAW8G,UAKV,4CAAd7G,EAAKkC,OAEL5D,EAAKuB,MAAMwJ,gBAET,mCADF/K,EAAKuB,MAAMwJ,eAAerJ,KAAKkC,OAG/BlC,EAAKD,WAAWZ,KAAOb,EAAKuB,MAAME,WAAWZ,KAC7Ca,EAAKD,WAAW2H,kBAAoBpJ,EAAKuB,MAAMwJ,eAAe3B,mBAGhEiE,EAAOQ,QACL5D,GAAU,oBAAsBvI,EAAKD,WAAWZ,MAChDoJ,GAAU,0CACVC,GAAQxI,EAAKD,WAAW2H,uBAI9BiE,EAAOgB,IAAI,SAACC,EAAOC,GACjBnN,QAAQC,IAAIkN,GACZvO,EAAKwO,aAAaD,GAClBA,EAAS,MAxtBMvO,EA6tBnByO,gBAAkB,SAACC,GACjBxJ,MACEkF,GACE,WACApK,EAAKuB,MAAMoN,UACX,IACA3O,EAAKuB,MAAMqN,eAAeF,IAC5BvJ,KAAK,SAACC,GACNA,EAASyJ,OAAO1J,KAAK,SAAC0J,GACpB,IAAInD,EAAMrB,OAAOyE,IAAIC,gBAAgBF,GACjC5L,EAAIZ,SAASa,cAAc,KAC/BD,EAAE4H,KAAOa,EACTzI,EAAE+L,SAAWhP,EAAKuB,MAAMqN,eAAeF,GACvCzL,EAAEgM,aA1uBWjP,EA+uBnBwO,aAAe,SAACD,GACd,IAAIpB,EAAO,IAAI+B,KAAK,CAACX,GAAS,CAAE3K,KAAM,aAClCuL,EAAO,IAAIC,KAAK,CAACjC,GAAO,cAExBkC,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAUJ,GAC1BjK,MAAMkF,GAAW,UAAW,CAC1BoF,OAAQ,OACRC,KAAMJ,IAELlK,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACuK,GACDA,EAAIpB,QAA6B,IAApBoB,EAAIpB,MAAMqB,KACzB3P,EAAKU,SAAS,CACZkP,SAAS,IAEFF,EAAIG,YACb7P,EAAKU,SAAS,CACZiO,UAAWe,EAAIG,UACfC,eAAe,IAEjB9P,EAAK+P,SAAWC,YAAYhQ,EAAKiQ,oBAAqB,SApwB3CjQ,EAywBnBiQ,oBAAsB,WACpB/K,MAAMkF,GAAW,WAAapK,EAAKuB,MAAMoN,WACtCxJ,KAAK,SAAUC,GACd,OAAOA,EAASC,SAEjBF,KAAK,SAACG,GACuB,IAAxBA,EAAQO,OAAO8J,OACjBO,cAAclQ,EAAK+P,UACnB/P,EAAKU,SAAS,CACZyP,sBAAsB,EACtBC,kBAAkB,IAEpBpQ,EAAKqQ,iBArxBMrQ,EA0xBnBqQ,WAAa,WACXnL,MAAMkF,GAAW,YAAcpK,EAAKuB,MAAMoN,WACvCxJ,KAAK,SAAUC,GACd,OAAOA,EAASC,SAEjBF,KAAK,SAACG,GACLlE,QAAQC,IAAIiE,EAAQsJ,gBACpB5O,EAAKU,SAAS,CACZkO,eAAgBtJ,EAAQsJ,oBAlyBb5O,EAuyBnBsQ,SAAW,WACTpL,MAAMkF,GAAW,SAAWpK,EAAKuB,MAAMoN,WAAWxJ,KAAK,SAAUC,GAC/D,IAAInC,EAAIZ,SAASC,eAAe,gBAChCW,EAAE4H,KAAOzF,EAASsG,IAClBzI,EAAEgM,WA3yBajP,EA8yBnBmB,OAAS,WACPnB,EAAKU,SAAS,CACZkP,SAAU5P,EAAKuB,MAAMqO,WAhzBN5P,EAozBnBuQ,mBAAqB,SAAC9P,GACpBT,EAAKU,SAAS,CACZ8P,yBAA0BxQ,EAAKuB,MAAMkP,cAAcC,OAAO,SAAC9K,GACzD,OAAOA,EAAE+K,cAAcrF,SAAS7K,EAAMG,OAAOE,MAAM6P,iBAErDC,UAAWnQ,EAAMG,OAAOE,SAzzBTd,EA6zBnB6Q,eAAiB,SAACpQ,GAChBT,EAAKU,SAAS,CACZ8P,yBAA0B,GAC1BM,UAAW9Q,EAAKuB,MAAMwP,SAAStQ,EAAMG,OAAOE,OAC5C8P,UAAWnQ,EAAMG,OAAOE,MACxBkQ,YAAY,KAl0BGhR,EAs0BnBiR,sBAAwB,SAACxQ,GACvBT,EAAKU,SAAS,CACZoQ,UAAWrQ,EAAMG,OAAOE,MACxBkQ,YAAY,KAz0BGhR,EA60BnBkR,eAAiB,SAACC,GAChBnR,EAAKU,SAAS,CACZwQ,eAAgBlR,EAAKuB,MAAM2P,eAAeE,OAAOpR,EAAKuB,MAAMqP,aAE9D5Q,EAAKuB,MAAMiM,SAASxN,EAAKuB,MAAMqP,WAAa5Q,EAAKuB,MAAMuP,WAj1BtC9Q,EAo1BnBqR,YAAc,WACZrR,EAAKU,SAAS,CACZ4Q,iBAAkBtR,EAAKuB,MAAM+P,mBAt1BdtR,EA01BnBuR,kBAAoB,WAClBvR,EAAKU,SAAS,CACZ4Q,iBAAkBtR,EAAKuB,MAAM+P,mBA51BdtR,EAg2BnBwR,2BAA6B,WAC3BxR,EAAKU,SAAS,CACZyP,sBAAuBnQ,EAAKuB,MAAM4O,wBAh2BpCnQ,EAAKuB,MAAQ,CACX6K,MAAO,IAAIqF,SACXC,YAAa,GACbjB,cAAe,GACfkB,OAAM,GACNC,aAAa,EACbd,UAAW,GACXF,UAAW,GACXJ,yBAA0B,GAC1BU,eAAgB,GAChBrP,UAAU,EACVgQ,cAAe,GACfnQ,KAAM,GACNsP,YAAY,EACZc,QAAS,GACT3C,KAAM,GACNS,SAAS,EACTjB,UAAW,GACX2C,iBAAiB,EACjBnB,sBAAsB,EACtBC,kBAAkB,EAClBxB,eAAgB,GAChBkB,eAAe,EACf/E,eAAgB,GAChBgH,OAAQ,GACRC,OAAQ,GACRxE,SAAU,CACRyE,QAAS,oBACTC,KAAM,6BACNC,QAAS,+BACTC,KAAM,wBACNC,MAAO,yBACPC,IAAK,2CACLC,IAAK,iCACLC,IAAK,8CACLC,KAAM,wCACNC,IAAK,qCAEPxH,eAAgB,CACd,CACEK,IAAKzL,EACL8C,MAAO,oBACP/B,KAAM,kBACN6K,IAAK,yBACLiH,KAAM3P,EAAAC,EAAAC,cAAC0P,EAAD,CAAiBjR,eAAgB3B,EAAK8K,oBAE9C,CACES,IAAKlH,EACLzB,MAAO,oBACP/B,KAAM,kBACN6K,IAAK,yBACLiH,KAAM3P,EAAAC,EAAAC,cAAC2P,EAAD,CAAiBlR,eAAgB3B,EAAK8K,oBAE9C,CACES,IAAKhF,EACL3D,MAAO,6BACP/B,KAAM,2BACN6K,IAAK,oCACLiH,KACE3P,EAAAC,EAAAC,cAAC4P,EAAD,CAA0BnR,eAAgB3B,EAAK8K,oBAGnD,CACES,IAAK5D,EACL/E,MAAO,8BACP/B,KAAM,4BACN6K,IAAK,qCACLiH,KACE3P,EAAAC,EAAAC,cAAC6P,EAAD,CAA2BpR,eAAgB3B,EAAK8K,oBAGpD,CACES,IAAKjD,EACL1F,MAAO,0BACP/B,KAAM,wBACN6K,IAAK,iCACLiH,KACE3P,EAAAC,EAAAC,cAAC8P,EAAD,CAAuBrR,eAAgB3B,EAAK8K,oBAGhD,CACES,IAAKrD,EACLtF,MAAO,oCACP/B,KAAM,kCACN6K,IAAK,2CACLiH,KACE3P,EAAAC,EAAAC,cAAC+P,EAAD,CACEtR,eAAgB3B,EAAK8K,oBAI3B,CACES,IAAKvC,EACLpG,MAAO,gCACP/B,KAAM,8BACN6K,IAAK,uCACLiH,KACE3P,EAAAC,EAAAC,cAACgQ,EAAD,CACEvR,eAAgB3B,EAAK8K,oBAI3B,CACES,IAAK/B,EACL5G,MAAO,6CACP/B,KAAM,0CACN6K,IAAK,mDACLiH,KACE3P,EAAAC,EAAAC,cAACiQ,EAAD,CACExR,eAAgB3B,EAAK8K,oBAI3B,CACES,IAAK5B,EACL/G,MAAO,6CACP/B,KAAM,0CACN6K,IAAK,mDACLiH,KACE3P,EAAAC,EAAAC,cAACkQ,EAAD,CACEzR,eAAgB3B,EAAK8K,oBAI3B,CACES,IAAKlC,EACLzG,MAAO,kCACP/B,KAAM,gCACN6K,IAAK,yCACLiH,KACE3P,EAAAC,EAAAC,cAACmQ,EAAD,CACE1R,eAAgB3B,EAAK8K,oBAI3B,CACES,IAAKpC,EACLvG,MAAO,oCACP/B,KAAM,iCACN6K,IAAK,0CACLiH,KACE3P,EAAAC,EAAAC,cAACoQ,EAAD,CACE3R,eAAgB3B,EAAK8K,oBAI3B,CACES,IAAK1C,EACLjG,MAAO,4BACP/B,KAAM,0BACN6K,IAAK,mCACLiH,KACE3P,EAAAC,EAAAC,cAACqQ,EAAD,CAAyB5R,eAAgB3B,EAAK8K,oBAGlD,CACES,IAAK5C,EACL/F,MAAO,4BACP/B,KAAM,0BACN6K,IAAK,mCACLiH,KACE3P,EAAAC,EAAAC,cAACsQ,EAAD,CAAyB7R,eAAgB3B,EAAK8K,oBAGlD,CACES,IAAK1G,EACLjC,MAAO,sBACP/B,KAAM,oBACN6K,IAAK,2BACLiH,KAAM3P,EAAAC,EAAAC,cAACuQ,EAAD,CAAmB9R,eAAgB3B,EAAK8K,sBA3KnC9K,mFA6LC,IAAA0T,EAAAvT,KACdwT,EAAc,IAAIC,eAAa,YAAazT,KAAKoB,MAAM6K,OAC3DjM,KAAKoB,MAAM6K,MAAMyH,QAGjBF,EAAYG,gBAAkB,SAACpS,GAC7BgS,EAAKhT,SAAS,CACZgB,KAAMA,KAGViS,EAAYI,WAAY,EAGxB7O,MAAM,6BACHC,KAAK,SAAUC,GACd,OAAOA,EAASC,SAEjBF,KAAK,SAACG,GACLoO,EAAKhT,SAAS,CACZqQ,SAAUzL,EAAQ,YAClBmL,cAAexQ,OAAOiG,KAAKZ,EAAQ,iBAIZ,KAAzBnF,KAAKoB,MAAMqP,WAA6C,KAAzBzQ,KAAKoB,MAAMuP,WAC5C3Q,KAAKO,SAAS,CACZsQ,YAAY,IAIhB,IAAMgD,EAAS,IAAIlK,GAAG4D,OACtBxI,MAAMkF,GAAW,WACdjF,KAAK,SAAUC,GACd,OAAOA,EAAS6O,SAEjB9O,KAAK,SAACG,GACL0O,EAAOE,MAAM5O,EAAS,SAACgJ,EAAOhB,EAAME,GAC9BF,GAAQA,EAAKY,UAAUnK,GAAGuH,SAAS,gBACrCoI,EAAK1I,SAASsC,EAAKa,OAAOpK,yCAmoB3B,IAAAoQ,EAAAhU,KACSiU,IAAEjJ,IAAIhL,KAAKoB,MAAMkP,cAAe,SAAC4D,EAAK3F,GAAN,MAAiB,CAC/DrD,IAAKgJ,EACLJ,KAAMI,EACNvT,MAAOuT,KAGT,OACErR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACoR,GAAA,EAAD,CAAOC,OAAQpU,KAAKoB,MAAMqO,QAASzO,OAAQhB,KAAKgB,QAC9C6B,EAAAC,EAAAC,cAACsR,GAAA,EAAD,CAAarT,OAAQhB,KAAKgB,QAA1B,2BAGA6B,EAAAC,EAAAC,cAACuR,GAAA,EAAD,+DAKFzR,EAAAC,EAAAC,cAACoR,GAAA,EAAD,CACEC,OAAQpU,KAAKoB,MAAM4O,qBACnBhP,OAAQhB,KAAKqR,4BAEbxO,EAAAC,EAAAC,cAACsR,GAAA,EAAD,CAAarT,OAAQhB,KAAKqR,4BAA1B,UAGAxO,EAAAC,EAAAC,cAACuR,GAAA,EAAD,kFAMFzR,EAAAC,EAAAC,cAACoR,GAAA,EAAD,CACEC,OAAQpU,KAAKoB,MAAM+P,gBACnBnQ,OAAQhB,KAAKoR,mBAEbvO,EAAAC,EAAAC,cAACsR,GAAA,EAAD,CAAarT,OAAQhB,KAAKoR,mBAA1B,WACAvO,EAAAC,EAAAC,cAACuR,GAAA,EAAD,KACEzR,EAAAC,EAAAC,cAACwR,GAAA,EAAD,KACE1R,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,wBAGJF,EAAAC,EAAAC,cAAA,aACG/C,KAAKoB,MAAMqN,eAAezD,IAAI,SAACgE,EAAMT,GAAP,OAC7B1L,EAAAC,EAAAC,cAAA,MAAImI,IAAKqD,GACP1L,EAAAC,EAAAC,cAAA,UAAKiM,GACLnM,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQC,QAAS,kBAAMiQ,EAAK1F,gBAAgBC,KAC1C1L,EAAAC,EAAAC,cAAA,KACEE,UAAU,iBACVuR,MAAO,CAAE9R,MAAK,WACb,IAJL,oBAcdG,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,KACE5R,EAAAC,EAAAC,cAAC2R,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACtBhS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,KAAf,YACAN,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,KACE5R,EAAAC,EAAAC,cAAC2R,GAAA,EAAD,CAAKE,GAAG,KAAKE,GAAG,MACdjS,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,KACE5R,EAAAC,EAAAC,cAAC2R,GAAA,EAAD,CAAKzR,UAAU,OAAO2R,GAAG,KACvB/R,EAAAC,EAAAC,cAACgS,EAAA,SAAD,KACElS,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWL,UAAU,YACnBJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEwC,YAAY,QACZvC,KAAK,OACL9C,MAAOX,KAAKoB,MAAMqP,UAClB/M,SAAU1D,KAAKoQ,qBAEjBvN,EAAAC,EAAAC,cAACiS,GAAA,EAAD,CACE/R,UAAU,mBACVjC,OAAQhB,KAAKwL,gBAEZxL,KAAKoB,MAAMiP,yBAAyBrF,IACnC,SAACiK,EAAa/J,GAAd,OACErI,EAAAC,EAAAC,cAACmS,GAAA,EAAD,CACEjS,UAAU,gBACVtC,MAAOsU,EACPlR,QAASiQ,EAAKtD,gBAEbuE,SAQfpS,EAAAC,EAAAC,cAAC2R,GAAA,EAAD,CAAKzR,UAAU,OAAO2R,GAAG,KACvB/R,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEwC,YAAY,YACZvC,KAAK,OACL9C,MAAOX,KAAKoB,MAAMuP,UAClBjN,SAAU1D,KAAK8Q,0BAIrBjO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAO2R,GAAG,KACvB/R,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEqR,SAAUnV,KAAKoB,MAAMyP,WACrB5N,UAAU,sBACVP,MAAM,UACNqB,QAAS/D,KAAK+Q,gBAJhB,oBAcZlO,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACZjD,KAAKoB,MAAM2P,eAAe/F,IAAI,SAACoK,GAAD,OAC7BvS,EAAAC,EAAAC,cAACsS,GAAA,EAAD,CAAOC,QAAQ,SAAf,IAAyBF,UAOrCvS,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,KACE5R,EAAAC,EAAAC,cAAC2R,GAAA,EAAD,CAAKE,GAAG,KACN/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACwS,GAAA,EAAD,KACE1S,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,IAAI,MAAf,UAEFN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,UAAQa,GAAG,WAAW4R,OAAO,MAAMC,MAAM,SAAiB,KAE5D5S,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAObJ,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQC,QAAS/D,KAAK+M,YACpBlK,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAYuR,MAAO,CAAE9R,MAAK,WADzC,sBAKC1C,KAAKoB,MAAM6O,iBACVpN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,QAAS/D,KAAKkR,YACdsD,MAAO,CAAEkB,WAAU,SAEnB7S,EAAAC,EAAAC,cAAA,KACEE,UAAU,oBACVuR,MAAO,CAAE9R,MAAK,WACb,IAPL,gBAWA,GAED1C,KAAKoB,MAAMuO,cACV9M,EAAAC,EAAAC,cAAA,KACEtC,OAAO,SACPmD,GAAG,eAEH+R,IAAI,QAEJ9S,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,QAAS/D,KAAKmQ,SACdqE,MAAO,CAAEkB,WAAU,SAEnB7S,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAYuR,MAAO,CAAE9R,MAAK,WAAgB,IAJzD,SASF,OAUVG,EAAAC,EAAAC,cAAC2R,GAAA,EAAD,CAAKE,GAAG,KACL5U,KAAKoB,MAAM2J,eAAeC,IAAI,SAACC,EAAMC,GACpC,GAAI8I,EAAK5S,MAAMG,KAAKkB,QAAUwI,EAAKxI,MACjC,OAAOwI,EAAKuH,iBAtjCJxO,IAAMC,WAsnC9BoH,YAAUuK,sBAAwB,GAClCvK,YAAUwK,iBAAmB,GAEdvL,ICpqCXwL,GCCWC,GATF,CACX,CACEC,KAAM,aACNtV,KAAM,YACNuV,KAAM,kBACNC,UFuqCW5L,GEtqCX6L,OAAQ,WCuIGC,eA7Hb,SAAAA,EAAYxW,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoW,IACjBvW,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsW,GAAAjW,KAAAH,KAAMJ,KACDwB,MAAQ,CACXgT,QAAQ,EACR9N,cAAc,EACd5D,MAAO,eAET7C,EAAKmB,OAASnB,EAAKmB,OAAOqV,KAAZvW,OAAA+B,EAAA,EAAA/B,CAAAD,IACdA,EAAKyW,eAAiBzW,EAAKyW,eAAeD,KAApBvW,OAAA+B,EAAA,EAAA/B,CAAAD,IACtBA,EAAK0W,cAAgBvS,IAAMwS,YATV3W,wEAYbG,KAAKoB,MAAMgT,OACbpU,KAAKO,SAAS,CACZmC,MAAO,gBAGT1C,KAAKO,SAAS,CACZmC,MAAO,SAGX1C,KAAKO,SAAS,CACZ6T,QAASpU,KAAKoB,MAAMgT,gDAGTpD,GACbhR,KAAKO,SAAS,CACZ+F,cAAetG,KAAKoB,MAAMkF,kDAI5B,IAAImQ,EAAY,gBAOhB,OANAV,GAAO/K,IAAI,SAAC1F,EAAM4F,GAIhB,OAH+D,IAA3DhB,OAAOC,SAASO,KAAKgM,QAAQpR,EAAK6Q,OAAS7Q,EAAK0Q,QAClDS,EAAYnR,EAAK5E,MAEZ,OAEF+V,wCAGPvU,SAASyU,gBAAgBC,UAAU5V,OAAO,YAC1ChB,KAAKuW,cAAcM,QAAQD,UAAU5V,OAAO,iDAIxCkJ,OAAO4M,WAAa,KAAO9W,KAAKoB,MAAMgT,OACxCpU,KAAKO,SAAS,CACZmC,MAAO,SAGT1C,KAAKO,SAAS,CACZmC,MAAO,4DAKXwH,OAAO6M,iBAAiB,SAAU/W,KAAKgX,YAAYX,KAAKrW,kDAEvCgR,GAEf9G,OAAO4M,WAAa,KACpB9F,EAAEiG,QAAQ9M,SAAS+M,WAAalG,EAAE7G,SAAS+M,WACiB,IAA5DhV,SAASyU,gBAAgB1T,UAAUyT,QAAQ,cAE3CxU,SAASyU,gBAAgBC,UAAU5V,OAAO,YAC1ChB,KAAKuW,cAAcM,QAAQD,UAAU5V,OAAO,6CAI9C,OAEE6B,EAAAC,EAAAC,cAACoU,EAAA,EAAD,CACEzU,OACgE,IAA9D1C,KAAKJ,MAAMuK,SAAS+M,SAASR,QAAQ,oBACjC,OACA1W,KAAKoB,MAAMsB,MAEjB0U,OAAO,KACPnU,WACgE,IAA9DjD,KAAKJ,MAAMuK,SAAS+M,SAASR,QAAQ,oBACjC,4BACA,8BACsB,gBAArB1W,KAAKoB,MAAMsB,MAA0B,sBAAwB,KAGpEG,EAAAC,EAAAC,cAACsU,EAAA,EAAD,CAAWC,OAAK,GACdzU,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACfJ,EAAAC,EAAAC,cAACwU,EAAA,EAAD,CAAa7M,KAAK,KAChB7H,EAAAC,EAAAC,cAAA,OACEE,UAAU,cACVuU,IAAI,MACJpM,IAAKxB,EAAQ,OAEf/G,EAAAC,EAAAC,cAAA,QAAME,UAAU,cAAhB,iBAGJJ,EAAAC,EAAAC,cAAC0U,EAAA,EAAD,CAAe1T,QAAS/D,KAAKgB,QAC3B6B,EAAAC,EAAAC,cAAA,QAAME,UAAU,oCAChBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,oCAChBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,qCAElBJ,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CACEtD,OAAQpU,KAAKoB,MAAMgT,OACnBuD,QAAM,EACN1U,UAAU,iCA3GDe,IAAMC,WCiCZ2T,oLA1CX,OACE/U,EAAAC,EAAAC,cAAA,UACEE,UAAW,UAAYjD,KAAKJ,MAAMiY,QAAU,kBAAoB,KAEhEhV,EAAAC,EAAAC,cAACsU,EAAA,EAAD,CAAWC,QAAOtX,KAAKJ,MAAM0X,OAC3BzU,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,KACE5R,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAG2H,KAAK,+BAA+BjK,OAAO,YAIhDoC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAG2H,KAAK,gCAAgCjK,OAAO,YAEjDoC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE2H,KAAK,uCACLjK,OAAO,cAKfoC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BA1BNe,IAAMC,WH8DZqG,uBAvDb,SAAAA,EAAY1K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsK,IACjBzK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwK,GAAAnK,KAAAH,KAAMJ,KAyBRkY,kBAAoB,SAACpV,GACnB7C,EAAKU,SAAS,CAAEwX,YAAarV,KA3BZ7C,EA6BnBmY,cAAgB,SAACtV,GACf7C,EAAKU,SAAS,CAAE0X,gBAAiBvV,KA5BjC7C,EAAKuB,MAAQ,CACX6W,gBAAiB,QACjBF,YAAa,QAEflY,EAAKqY,UAAYlU,IAAMwS,YANN3W,mFASbsY,UAAUC,SAAS1B,QAAQ,QAAU,IACvCZ,GAAK,IAAIuC,IAAiBrY,KAAKkY,UAAUrB,SACzC3U,SAASoN,KAAKsH,UAAU5V,OAAO,wEAI7BmX,UAAUC,SAAS1B,QAAQ,QAAU,IACvCZ,GAAGwC,UACHpW,SAASoN,KAAKsH,UAAU5V,OAAO,oEAGhBgQ,GACQ,SAArBA,EAAEiG,QAAQsB,SACZvY,KAAKkY,UAAUrB,QAAQ2B,UAAY,EACnCtW,SAASuW,iBAAiBD,UAAY,oCAUxC,OACE3V,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAa0S,IAAK3V,KAAKkY,WACpCrV,EAAAC,EAAAC,cAAC2V,GAAe1Y,KAAKJ,OACrBiD,EAAAC,EAAAC,cAAC4V,EAAA,EAAD,KACG5C,GAAO/K,IAAI,SAAC1F,EAAM4F,GACjB,OACErI,EAAAC,EAAAC,cAAC4V,EAAA,EAAD,CACE3C,KAAM1Q,EAAK6Q,OAAS7Q,EAAK0Q,KACzBE,UAAW5Q,EAAK4Q,UAChBhL,IAAKA,OAKbrI,EAAAC,EAAAC,cAAC6V,GAAD,CAAQtB,OAAK,aAjDCtT,IAAMC,YICxB4U,GAAOC,cAEbC,IAASC,OACPnW,EAAAC,EAAAC,cAAC4V,EAAA,EAAD,CAAQ1B,QAAS4B,IACfhW,EAAAC,EAAAC,cAAC4V,EAAA,EAAD,KACE9V,EAAAC,EAAAC,cAAC4V,EAAA,EAAD,CAAO3C,KAAK,SAASgD,OAAQ,SAAApZ,GAAK,OAAIiD,EAAAC,EAAAC,cAACkW,GAAgBrZ,MACvDiD,EAAAC,EAAAC,cAAC4V,EAAA,EAAD,CAAUO,GAAG,uBAGjBhX,SAASC,eAAe","file":"static/js/main.b462c0b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deer-logo.b55379b3.svg\";","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass FileModelReader extends React.Component {\n  isSelected = false;\n\n  constructor(props) {\n    super(props);\n\n    this.properties = {\n      name: \"\",\n      fromUri: \"\",\n      fromPath: \"\",\n    };\n\n    this.state = {\n      endpoints: [],\n      showForm: \"\",\n      readerCount: 0,\n      name: \"\",\n      fromUri: \"\",\n      fromPath: \"\",\n      modal: true,\n    };\n\n    var that = this;\n\n    this.name_widget = this.addWidget(\n      \"text\",\n      \"Reader name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          that.setProperty(\"name\", this.state.name);\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"readerName\")) {\n          document.getElementById(\"readerName\").value = v;\n        }\n      }\n    );\n    this.fromUriWidget = this.addWidget(\n      \"text\",\n      \"deer:fromUri\",\n      this.properties.fromUri,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"fromUri\", v);\n        if (document.getElementById(\"fromUri\")) {\n          document.getElementById(\"fromUri\").value = v;\n        }\n      }\n    );\n\n    this.fromPathWidget = this.addWidget(\n      \"text\",\n      \"deer:fromPath\",\n      this.properties.fromPath,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"fromPath\", v);\n        if (document.getElementById(\"fromPath\")) {\n          document.getElementById(\"fromPath\").value = v;\n        }\n      }\n    );\n\n    this.widgets_up = true;\n    this.size = [180, 90];\n    this.addOutput(\"output\", \"text\");\n    this.title = \"File Model Reader\";\n    this.color = \"#223322\";\n    this.bgcolor = \"#335533\";\n\n    this.onNodeAdded = (node) => {\n      that.setProperty(\"name\", \"reader_\" + this.state.readerCount);\n      that.setState({\n        readerCount: this.state.readerCount + 1,\n      });\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n\n    //this.name_widget.value = event.target.value;\n  };\n\n  handleFromUriChange = (event) => {\n    this.setState({\n      fromUri: event.target.value,\n    });\n  };\n  handleFromPathChange = (event) => {\n    this.setState({\n      fromPath: event.target.value,\n    });\n  };\n\n  toggle = () => {\n    console.log(\"toggle\");\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  submitFormData = () => {\n    //event.preventDefault();\n    var properties = {\n      node: FileModelReader,\n      name: this.state.name,\n      fromUri: this.state.fromUri,\n      fromPath: this.state.fromPath,\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  render() {\n    return (\n      <div>\n        {/* <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n          <ModalBody>Please enter a name.</ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal> */}\n\n        <Card className=\"card-stats\">\n          <div className=\"numbers\">\n            <CardTitle tag=\"h5\">Node Details</CardTitle>\n            <p />\n          </div>\n          <CardBody>\n            <Form>\n              <FormGroup>\n                <Label>Name</Label>\n                <Input\n                  type=\"text\"\n                  //placeholder=\"Node name\"\n                  onChange={this.handleName}\n                  id=\"readerName\"\n                  name=\"name\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>deer:fromUri</Label>\n                <Input\n                  type=\"text\"\n                  //placeholder=\"fromUri\"\n                  onChange={this.handleFromUriChange}\n                  id=\"fromUri\"\n                  name=\"fromUri\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>deer:fromPath</Label>\n                <Input\n                  type=\"text\"\n                  //placeholder=\"fromPath\"\n                  onChange={this.handleFromPathChange}\n                  id=\"fromPath\"\n                  name=\"fromPath\"\n                />\n              </FormGroup>\n            </Form>\n          </CardBody>\n          <CardFooter>\n            <Button\n              className=\"btn-round\"\n              color=\"primary\"\n              onClick={this.submitFormData}\n            >\n              Save\n            </Button>\n          </CardFooter>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default FileModelReader;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass FileModelWriter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      outputFile: \"number\",\n      outputFormat: 0,\n    };\n\n    var that = this;\n\n    this.name_widget = this.addWidget(\n      \"text\",\n      \"Writer name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.name_widget = this.addWidget(\n      \"text\",\n      \"deer:outputFile\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"outputFile\", v);\n        if (document.getElementById(\"outputFile\")) {\n          document.getElementById(\"outputFile\").value = v;\n        }\n      }\n    );\n\n    this.name_widget = this.addWidget(\n      \"text\",\n      \"deer:outputFormat\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"outputFormat\", v);\n        if (document.getElementById(\"outputFormat\")) {\n          document.getElementById(\"outputFormat\").value = v;\n        }\n      }\n    );\n\n    this.widgets_up = true;\n    this.size = [180, 90];\n\n    this.title = \"File Model Writer\";\n    this.color = \"#223322\";\n    this.bgcolor = \"#335533\";\n  }\n\n  onExecute() {\n    let a = this.getInputData(0);\n    if (a === undefined) {\n      a = 0;\n    }\n    //console.log(a);\n    this.setOutputData(0, ++a);\n  }\n\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  submitForm = () => {\n    var properties = {\n      node: FileModelWriter,\n      name: this.state[\"name\"],\n      outputFile: this.state[\"outputFile\"],\n      outputFormat: this.state[\"outputFormat\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"p\">Node details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"Node name\"\n                onChange={this.handleChange}\n                name=\"name\"\n                id=\"name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Output File</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:outputFile\"\n                onChange={this.handleChange}\n                name=\"outputFile\"\n                id=\"outputFile\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Output Format</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:outputFormat\"\n                onChange={this.handleChange}\n                name=\"outputFormat\"\n                id=\"outputFormat\"\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            onClick={this.submitForm}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default FileModelWriter;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\n// reactstrap components\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass SparqlModelReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.properties = {\n      name: \"\",\n      fromEndpoint: \"\",\n      sparqlDescribeOf: \"\",\n      useSparqlConstruct: \"\",\n    };\n\n    this.state = {\n      endpoints: [],\n      showForm: false,\n    };\n    var that = this;\n\n    fetch(\"./lod-data.json\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        console.log(content);\n        let obj = {};\n        for (let prop in content) {\n          if (content[prop].sparql.length) {\n            for (let i = 0; i < content[prop].sparql.length; i++) {\n              if (content[prop].sparql[i].status === \"OK\") {\n                obj[content[prop].sparql[i].access_url] = true;\n              }\n            }\n          }\n        }\n        this.state.endpoints.push(...Object.keys(obj));\n      });\n\n    this.name_widget = this.addWidget(\n      \"text\",\n      \"Reader name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n    // this.addWidget(\n    //   \"combo\",\n    //   \"deer:fromEndpoint\",\n    //   \"Select\",\n    //   function (v) {\n    //     if (!v) {\n    //       return;\n    //     }\n    //     that.setProperty(\"endpoint\", v);\n    //   },\n    //   { values: this.state.endpoints }\n    // );\n    this.fromEndpoint = this.addWidget(\n      \"text\",\n      \"deer:fromEndpoint\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"fromEndpoint\", v);\n        if (document.getElementById(\"fromEndpoint\")) {\n          document.getElementById(\"fromEndpoint\").value = v;\n        }\n      }\n    );\n\n    this.sparqlDescribeOf = this.addWidget(\n      \"text\",\n      \"deer:useSparqlDescribeOf\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"sparqlDescribeOf\", v);\n        if (document.getElementById(\"sparqlDescribeOf\")) {\n          document.getElementById(\"sparqlDescribeOf\").value = v;\n        }\n      }\n    );\n    this.useSparqlConstruct = this.addWidget(\n      \"text\",\n      \"deer:useSparqlConstruct\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"useSparqlConstruct\", v);\n        if (document.getElementById(\"useSparqlConstruct\")) {\n          document.getElementById(\"useSparqlConstruct\").value = v;\n        }\n      }\n    );\n\n    this.widgets_up = true;\n    this.size = [180, 90];\n    this.addOutput(\"output\", \"text\");\n    this.title = \"SparQL Model Reader\";\n    this.color = \"#223322\";\n    this.bgcolor = \"#335533\";\n  }\n\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  submitForm = () => {\n    var properties = {\n      node: SparqlModelReader,\n      name: this.state[\"name\"],\n      fromEndpoint: this.state[\"fromEndpoint\"],\n      useSparqlDescribeOf: this.state[\"useSparqlDescribeOf\"],\n      useSparqlConstruct: this.state[\"useSparqlConstruct\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"p\">Node details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Node name\"\n                onChange={this.handleChange}\n                name=\"name\"\n                id=\"name\"\n                required\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>From endpoint:</Label>\n              <Input\n                type=\"text\"\n                placeholder=\"deer:fromEndpoint\"\n                onChange={this.handleChange}\n                name=\"fromEndpoint\"\n                id=\"fromEndpoint\"\n                required\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Use Sparql Describe of:</Label>\n              <Input\n                type=\"text\"\n                placeholder=\"deer:useSparqlDescribeOf\"\n                onChange={this.handleChange}\n                name=\"useSparqlDescribeOf\"\n                id=\"useSparqlDescribeOf\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Use Sparql Construct</Label>\n              <Input\n                type=\"textarea\"\n                placeholder=\"deer:useSparqlConstruct\"\n                onChange={this.handleChange}\n                name=\"useSparqlConstruct\"\n                id=\"useSparqlConstruct\"\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            onClick={this.submitForm}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default SparqlModelReader;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\nimport Select from \"react-select\";\n// reactstrap components\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nconst options = [\n  { value: \"subject\", label: \"Subject\" },\n  { value: \"predicate\", label: \"Predicate\" },\n  { value: \"object\", label: \"Object\" },\n];\n\nclass FilterEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n      endpoints: [],\n      dropdownOpen: true,\n      showSelector: false,\n      selectedOption: \"selector\",\n    };\n\n    fetch(\"./lod-data.json\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        console.log(content);\n        let obj = {};\n        for (let prop in content) {\n          if (content[prop].sparql.length) {\n            for (let i = 0; i < content[prop].sparql.length; i++) {\n              if (content[prop].sparql[i].status === \"OK\") {\n                obj[content[prop].sparql[i].access_url] = true;\n              }\n            }\n          }\n        }\n        this.state.endpoints.push(...Object.keys(obj));\n      });\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      showSelector: \"\",\n      selector: \"\",\n      resource: \"\",\n    };\n\n    var that = this;\n    var show = true;\n\n    this.name_widget_1 = this.addWidget(\n      \"text\",\n      \"Name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.combo_widget = this.addWidget(\n      \"combo\",\n      \"\",\n      \"Select\",\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"showSelector\", v);\n        if (document.getElementById(\"showSelector\")) {\n          document.getElementById(\"showSelector\").value = v;\n        }\n      },\n      { values: [\"Selectors\", \"Construct Query\"] }\n    );\n\n    // this.onPropertyChanged = function(name, value) {\n    //   console.log(this.widgets[1]);\n    //   // if (this.widgets[1].value === \"Selectors\") {\n    //   if (this.widgets[1].value === \"Selectors\") {\n    //     console.log(this.widgets[2]);\n    //     this.widgets[2].disabled = true;\n    //   }\n    //   // }\n    // };\n\n    this.selector_combo_widget = this.addWidget(\n      \"combo\",\n      \"\",\n      \"Select\",\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"selector\", v);\n        if (document.getElementById(\"selector\")) {\n          document.getElementById(\"selector\").value = v;\n        }\n      },\n      { values: [\"subject\", \"predicate\", \"object\"] }\n    );\n\n    this.name_widget = this.addWidget(\n      \"text\",\n      \"Add resource\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"resource\", v);\n        if (document.getElementById(\"resource\")) {\n          document.getElementById(\"resource\").value = v;\n        }\n      }\n    );\n\n    this.name_widget = this.addWidget(\n      \"text\",\n      \"Add resource\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"sparqlConstructQuery\", v);\n        if (document.getElementById(\"sparqlConstructQuery\")) {\n          document.getElementById(\"sparqlConstructQuery\").value = v;\n        }\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"Filter Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      dropdownOpen: !prevState.dropdownOpen,\n    }));\n  };\n\n  submitForm = () => {\n    var properties = {\n      node: FilterEnrichmentOperator,\n      name: this.state[\"name\"],\n      selector: this.state[\"selector\"],\n      resource: this.state[\"resource\"],\n      sparqlConstructQuery: this.state[\"sparqlConstructQuery\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  handleSelectChange = (selectedOption) => {\n    this.setState({ selectedOption, selector: selectedOption.value });\n  };\n\n  handleRadioChange = (event) => {\n    this.setState({\n      radioOption: event.target.value,\n    });\n\n    if (event.target.value === \"selector\") {\n      this.setState({\n        showSelector: true,\n      });\n    } else if (event.target.value === \"sparqlConstructQuery\") {\n      this.setState({\n        showSelector: false,\n      });\n    }\n  };\n\n  handleChange = (event) => {\n    event.preventDefault();\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"h5\">Node Details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                onChange={this.handleChange}\n                placeholder=\"Node name\"\n                name=\"name\"\n                id=\"name\"\n              />\n            </FormGroup>\n\n            <FormGroup tag=\"fieldset\">\n              <legend>Select:</legend>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"radio\"\n                    name=\"radio1\"\n                    value=\"selector\"\n                    onChange={this.handleRadioChange}\n                    checked={this.state.radioOption === \"selector\"}\n                  />{\" \"}\n                  Selector\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"radio\"\n                    name=\"radio1\"\n                    value=\"sparqlConstructQuery\"\n                    onChange={this.handleRadioChange}\n                    checked={this.state.radioOption === \"sparqlConstructQuery\"}\n                  />{\" \"}\n                  Construct Query\n                </Label>\n              </FormGroup>\n            </FormGroup>\n\n            {this.state.showSelector ? (\n              <div>\n                <FormGroup>\n                  <Label>Selector</Label>\n                  <Select\n                    value={this.state.selectedOption}\n                    onChange={this.handleSelectChange}\n                    options={options}\n                    name=\"selector\"\n                    id=\"selector\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label>Name</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    //placeholder=\"Enter resource\"\n                    name=\"resource\"\n                    id=\"resource\"\n                  />\n                </FormGroup>\n              </div>\n            ) : (\n              <FormGroup>\n                <Label>Use Sparql Construct</Label>\n                <Input\n                  type=\"textarea\"\n                  //placeholder=\"deer:sparqlConstructQuery\"\n                  onChange={this.handleChange}\n                  name=\"sparqlConstructQuery\"\n                  id=\"sparqlConstructQuery\"\n                />\n              </FormGroup>\n            )}\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            onClick={this.submitForm}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default FilterEnrichmentOperator;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\nimport Select from \"react-select\";\n\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n  DropdownMenu,\n  DropdownToggle,\n} from \"reactstrap\";\n\nconst options = [\n  { value: \"all\", label: \"all\" },\n  { value: \"best1toN\", label: \"best1toN\" },\n  { value: \"best1to1\", label: \"best1to1\" },\n  { value: \"best\", label: \"best\" },\n];\n\nclass LinkingEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n      selectedOption: null,\n    };\n\n    this.addInput(\"input1\", \"text\");\n    this.addInput(\"input2\", \"text\");\n\n    this.properties = {\n      name: \"\",\n      specFile: \"\",\n      linksPart: \"\",\n      linkSpecification: \"\",\n      linkingPredicate: \"\",\n      threshold: \"\",\n    };\n\n    var that = this;\n\n    this.name_widget = this.addWidget(\n      \"text\",\n      \"Name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.specFile = this.addWidget(\n      \"text\",\n      \"deer:specFile\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"specFile\", v);\n        if (document.getElementById(\"specFile\")) {\n          document.getElementById(\"specFile\").value = v;\n        }\n      }\n    );\n\n    this.linksPart = this.addWidget(\n      \"combo\",\n      \"deer:linksPart\",\n      \"Select\",\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"linksPart\", v);\n        if (document.getElementById(\"linksPart\")) {\n          document.getElementById(\"linksPart\").value = v;\n        }\n      },\n      { values: [\"source\", \"target\"] }\n    );\n\n    // this.onPropertyChanged = function(name, value) {\n    //   console.log(this.widgets[1]);\n    //   // if (this.widgets[1].value === \"Selectors\") {\n    //   if (this.widgets[1].value === \"Selectors\") {\n    //     console.log(this.widgets[2]);\n    //     this.widgets[2].disabled = true;\n    //   }\n    //   // }\n    // };\n\n    this.selectMode = this.addWidget(\n      \"combo\",\n      \"deer:selectMode\",\n      \"Select\",\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"selectMode\", v);\n        if (document.getElementById(\"selectMode\")) {\n          document.getElementById(\"selectMode\").value = v;\n        }\n      },\n      { values: [\"all\", \"best1toN\", \"best1to1\", \"best\"] }\n    );\n\n    this.linkSpecification = this.addWidget(\n      \"text\",\n      \"deer:linkSpecification\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"linkSpecification\", v);\n        if (document.getElementById(\"linkSpecification\")) {\n          document.getElementById(\"linkSpecification\").value = v;\n        }\n      }\n    );\n\n    this.linkingPredicate = this.addWidget(\n      \"text\",\n      \"deer:linkingPredicate\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"linkingPredicate\", v);\n        if (document.getElementById(\"linkingPredicate\")) {\n          document.getElementById(\"linkingPredicate\").value = v;\n        }\n      }\n    );\n\n    this.threshold = this.addWidget(\n      \"text\",\n      \"deer:threshold\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"threshold\", v);\n        if (document.getElementById(\"threshold\")) {\n          document.getElementById(\"threshold\").value = v;\n        }\n      }\n    );\n\n    this.addOutput(\"output1\", \"text\");\n\n    this.title = \"Linking Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      dropdownOpen: !prevState.dropdownOpen,\n    }));\n  };\n\n  handleSelectChange = (selectedOption) => {\n    this.setState({ selectedOption, selectMode: selectedOption.value });\n  };\n\n  submitForm = () => {\n    var properties = {\n      node: LinkingEnrichmentOperator,\n      name: this.state[\"name\"],\n      specFile: this.state[\"specFile\"],\n      linksPart: this.state[\"radioOption\"],\n      selectMode: this.state[\"selectMode\"],\n      linkSpecification: this.state[\"linkSpecification\"],\n      linkingPredicate: this.state[\"linkingPredicate\"],\n      threshold: this.state[\"threshold\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  handleRadioChange = (event) => {\n    this.setState({\n      radioOption: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"p\">Node details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                onChange={this.handleChange}\n                //der=\"Node name\"\n                name=\"name\"\n                id=\"name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Spec File:</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:specFile\"\n                onChange={this.handleChange}\n                name=\"specFile\"\n                id=\"specFile\"\n              />\n            </FormGroup>\n            <FormGroup tag=\"fieldset\">\n              <legend>LinksPart</legend>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"radio\"\n                    name=\"radio1\"\n                    value=\"source\"\n                    onChange={this.handleRadioChange}\n                    checked={this.state.radioOption === \"source\"}\n                  />{\" \"}\n                  Source\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"radio\"\n                    name=\"radio1\"\n                    value=\"target\"\n                    onChange={this.handleRadioChange}\n                    checked={this.state.radioOption === \"target\"}\n                  />{\" \"}\n                  Target\n                </Label>\n              </FormGroup>\n            </FormGroup>\n            <FormGroup>\n              <Label>Select Mode</Label>\n              <Select\n                value={this.state.selectedOption}\n                onChange={this.handleSelectChange}\n                options={options}\n                name=\"selectMode\"\n                id=\"selectMode\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Link Specification:</Label>\n              <Input\n                type=\"text\"\n                placeholder=\"deer:linkSpecification\"\n                onChange={this.handleChange}\n                name=\"linkSpecification\"\n                id=\"linkSpecification\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Linking Predicate:</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:linkingPredicate\"\n                onChange={this.handleChange}\n                name=\"linkingPredicate\"\n                id=\"linkingPredicate\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Threshold:</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:threshold\"\n                onChange={this.handleChange}\n                name=\"threshold\"\n                id=\"threshold\"\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            onClick={this.submitForm}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default LinkingEnrichmentOperator;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n  DropdownMenu,\n  DropdownToggle,\n} from \"reactstrap\";\n\nclass DereferencingEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n    };\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      lookUpPrefix: \"\",\n      dereferencingProperty: \"\",\n      importProperty: \"\",\n    };\n\n    var that = this;\n    var show = true;\n\n    this.name = this.addWidget(\n      \"text\",\n      \"Operator name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n      }\n    );\n\n    this.lookUpPrefix = this.addWidget(\n      \"text\",\n      \"deer:lookUpPrefix\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"lookUpPrefix\", v);\n      }\n    );\n\n    this.dereferencingProperty = this.addWidget(\n      \"text\",\n      \"deer:dereferencingProperty\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"dereferencingProperty\", v);\n      }\n    );\n\n    this.importProperty = this.addWidget(\n      \"text\",\n      \"deer:importProperty\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"importProperty\", v);\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"Dereferencing Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"p\">Node details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Look Up Prefix</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:lookUpPrefix\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Dereferencing Property</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:dereferencingProperty\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Import Property</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:importProperty\"\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            // onClick={this.addNewPrefixes}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default DereferencingEnrichmentOperator;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\nimport Select from \"react-select\";\n\n// reactstrap components\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nconst options = [\n  { value: \"location\", label: \"Location\" },\n  { value: \"person\", label: \"Person\" },\n  { value: \"organization\", label: \"Organization\" },\n  { value: \"all\", label: \"All\" },\n];\n\nclass NEREnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n      selectedOption: null,\n    };\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      literalProperty: \"\",\n      importProperty: \"\",\n      neType: \"location\",\n      foxUrl: false,\n    };\n\n    var that = this;\n\n    this.literalProperty = this.addWidget(\n      \"text\",\n      \"Name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.literalProperty = this.addWidget(\n      \"text\",\n      \"deer:literalProperty\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"literalProperty\", v);\n        if (document.getElementById(\"literalProperty\")) {\n          document.getElementById(\"literalProperty\").value = v;\n        }\n      }\n    );\n\n    this.importProperty = this.addWidget(\n      \"text\",\n      \"deer:importProperty\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"importProperty\", v);\n        if (document.getElementById(\"importProperty\")) {\n          document.getElementById(\"naimportPropertyme\").value = v;\n        }\n      }\n    );\n\n    this.neType = this.addWidget(\n      \"combo\",\n      \"\",\n      \"location\",\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"neType\", v);\n        if (document.getElementById(\"neType\")) {\n          document.getElementById(\"neType\").value = v;\n        }\n      },\n      { values: [\"location\", \"person\", \"organization\", \"all\"] }\n    );\n\n    this.askEndpoint = this.addWidget(\n      \"text\",\n      \"deer:askEndpoint\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"foxUrl\", v);\n        if (document.getElementById(\"foxUrl\")) {\n          document.getElementById(\"foxUrl\").value = v;\n        }\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"NER Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n\n  handleSelectChange = (selectedOption) => {\n    this.setState({ neType: selectedOption.value });\n  };\n\n  submitForm = () => {\n    var properties = {\n      node: NEREnrichmentOperator,\n      name: this.state[\"name\"],\n      literalProperty: this.state[\"literalProperty\"],\n      importProperty: this.state[\"importProperty\"],\n      neType: this.state[\"neType\"],\n      foxUrl: this.state[\"foxUrl\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"h5\">Node Details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"Node name\"\n                onChange={this.handleChange}\n                name=\"name\"\n                id=\"name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Literal Property</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:literalProperty\"\n                onChange={this.handleChange}\n                name=\"literalProperty\"\n                id=\"literalProperty\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Import Property</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:importProperty\"\n                onChange={this.handleChange}\n                name=\"importProperty\"\n                id=\"importProperty\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>neType</Label>\n              <Select\n                value={this.state.selectedOption}\n                onChange={this.handleSelectChange}\n                options={options}\n                //placeholder=\"deer:neType\"\n                id=\"neType\"\n                name=\"neType\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Endpoint</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:foxUrl\"\n                onChange={this.handleChange}\n                name=\"foxUrl\"\n                id=\"foxUrl\"\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            onClick={this.submitForm}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default NEREnrichmentOperator;\n","import React from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\nclass CloneEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n    };\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n    };\n\n    var that = this;\n    var show = true;\n\n    this.operatorName = this.addWidget(\n      \"text\",\n      \"Operator Name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"Clone Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n}\n\nexport default CloneEnrichmentOperator;\n","import React from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\nclass MergeEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n    };\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      node_1: \"\",\n      node_2: \"\",\n    };\n\n    var that = this;\n    var show = true;\n\n    this.node_1 = this.addWidget(\n      \"text\",\n      \"deer:node_1\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"node_1\", v);\n      }\n    );\n    this.node_2 = this.addWidget(\n      \"text\",\n      \"deer:node_2\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"node_2\", v);\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"Merge Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n}\n\nexport default MergeEnrichmentOperator;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\nimport Select from \"react-select\";\n\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nconst options = [\n  { value: \"takeA\", label: \"takeA\" },\n  { value: \"takeB\", label: \"takeB\" },\n  { value: \"takeAll\", label: \"takeAll\" },\n  { value: \"takeMostDetailed\", label: \"takeMostDetailed\" },\n];\nclass GeoFusionEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n      selectedOption: null,\n    };\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      fusionAction: \"\",\n      mergeOtherStatements: \"\",\n    };\n\n    var that = this;\n    var show = true;\n\n    this.name = this.addWidget(\n      \"text\",\n      \"Operator Name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.fusionAction = this.addWidget(\n      \"combo\",\n      \"\",\n      \"Select\",\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"fusionAction\", v);\n        if (document.getElementById(\"fusionAction\")) {\n          document.getElementById(\"fusionAction\").value = v;\n        }\n      },\n      { values: [\"takeA\", \"takeB\", \"takeAll\", \"takeMostDetailed\"] }\n    );\n\n    this.mergeOtherStatements = this.addWidget(\n      \"text\",\n      \"deer:mergeOtherStatements\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"mergeOtherStatements\", v);\n        if (document.getElementById(\"mergeOtherStatements\")) {\n          document.getElementById(\"mergeOtherStatements\").value = v;\n        }\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"GeoFusion Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n\n  handleSelectChange = (selectedOption) => {\n    this.setState({ selectedOption: selectedOption.value });\n    console.log(`Option selected:`, selectedOption);\n  };\n\n  submitForm = () => {\n    var properties = {\n      node: GeoFusionEnrichmentOperator,\n      name: this.state[\"name\"],\n      fusionAction: this.state[\"selectedOption\"],\n      mergeOtherStatements: this.state[\"mergeOtherStatements\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"p\">Node details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                onChange={this.handleChange}\n                //placeholder=\"Node name\"\n                name=\"name\"\n                id=\"name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Fusion Action</Label>\n              <Select\n                value={this.state.selectedOption}\n                onChange={this.handleSelectChange}\n                options={options}\n                //placeholder=\"deer:fusionAction\"\n                name=\"fusionAction\"\n                id=\"fusionAction\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Merge other statements?</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:mergeOtherStatements\"\n                onChange={this.handleChange}\n                name=\"mergeOtherStatements\"\n                id=\"mergeOtherStatements\"\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            onClick={this.submitForm}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default GeoFusionEnrichmentOperator;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n  DropdownMenu,\n  DropdownToggle,\n} from \"reactstrap\";\n\nclass SparqlUpdateEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n    };\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      sparqlUpdateQuery: \"\",\n    };\n\n    var that = this;\n\n    this.sparqlUpdateQuery = this.addWidget(\n      \"text\",\n      \"Name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.sparqlUpdateQuery = this.addWidget(\n      \"text\",\n      \"deer:sparqlUpdateQuery\",\n      this.properties.sparqlUpdateQuery,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"sparqlUpdateQuery\", v);\n        if (document.getElementById(\"sparqlUpdateQuery\")) {\n          document.getElementById(\"sparqlUpdateQuery\").value = v;\n        }\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"Sparql Update Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  submitForm = () => {\n    var properties = {\n      node: SparqlUpdateEnrichmentOperator,\n      name: this.state[\"name\"],\n      sparqlUpdateQuery: this.state[\"sparqlUpdateQuery\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"p\">Node details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"Node name\"\n                onChange={this.handleChange}\n                name=\"name\"\n                id=\"name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Sparql Update Query</Label>\n              <Input\n                type=\"textarea\"\n                name=\"sparqlUpdateQuery\"\n                id=\"sparqlUpdateQuery\"\n                //placeholder=\"deer:sparqlUpdateQuery\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            onClick={this.submitForm}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default SparqlUpdateEnrichmentOperator;\n","import React from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\n// reactstrap components\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass GeoDistanceEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n    };\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      selectPredicate: \"\",\n      distancePredicate: \"\",\n    };\n\n    var that = this;\n\n    this.selectPredicate = this.addWidget(\n      \"text\",\n      \"Name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.selectPredicate = this.addWidget(\n      \"text\",\n      \"deer:selectPredicate\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"selectPredicate\", v);\n        if (document.getElementById(\"selectPredicate\")) {\n          document.getElementById(\"selectPredicate\").value = v;\n        }\n      }\n    );\n\n    this.distancePredicate = this.addWidget(\n      \"text\",\n      \"deer:distancePredicate\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"distancePredicate\", v);\n        if (document.getElementById(\"distancePredicate\")) {\n          document.getElementById(\"distancePredicate\").value = v;\n        }\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"GeoDistance Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n\n  submitForm = () => {\n    var properties = {\n      node: GeoDistanceEnrichmentOperator,\n      name: this.state[\"name\"],\n      selectPredicate: this.state[\"selectPredicate\"],\n      distancePredicate: this.state[\"distancePredicate\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"p\">Node details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"Node name\"\n                onChange={this.handleChange}\n                name=\"name\"\n                id=\"name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Select Predicate</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:selectPredicate\"\n                onChange={this.handleChange}\n                name=\"selectPredicate\"\n                id=\"selectPredicate\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Distance Predicate</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:distancePredicate\"\n                onChange={this.handleChange}\n                name=\"distancePredicate\"\n                id=\"nadistancePredicateme\"\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            onClick={this.submitForm}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default GeoDistanceEnrichmentOperator;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\n// reactstrap components\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass AuthorityConformationEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n    };\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      sourceSubjectAuthority: \"\",\n      targetSubjectAuthority: \"\",\n    };\n\n    var that = this;\n    var show = true;\n\n    this.name = this.addWidget(\n      \"text\",\n      \"Operator Name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.sourceSubjectAuthority = this.addWidget(\n      \"text\",\n      \"deer:sourceSubjectAuthority\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"sourceSubjectAuthority\", v);\n        if (document.getElementById(\"sourceSubjectAuthority\")) {\n          document.getElementById(\"sourceSubjectAuthority\").value = v;\n        }\n      }\n    );\n\n    this.targetSubjectAuthority = this.addWidget(\n      \"text\",\n      \"deer:targetSubjectAuthority\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"targetSubjectAuthority\", v);\n        if (document.getElementById(\"targetSubjectAuthority\")) {\n          document.getElementById(\"targetSubjectAuthority\").value = v;\n        }\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"Authority Conformation Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n\n  submitForm = () => {\n    var properties = {\n      node: AuthorityConformationEnrichmentOperator,\n      name: this.state[\"name\"],\n      sourceSubjectAuthority: this.state[\"sourceSubjectAuthority\"],\n      targetSubjectAuthority: this.state[\"targetSubjectAuthority\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"p\">Node details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"Node name\"\n                onChange={this.handleChange}\n                name=\"name\"\n                id=\"name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Source Subject Authority</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:sourceSubjectAuthority\"\n                onChange={this.handleChange}\n                name=\"sourceSubjectAuthority\"\n                id=\"sourceSubjectAuthority\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Target Subject Authority</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:targetSubjectAuthority\"\n                onChange={this.handleChange}\n                name=\"targetSubjectAuthority\"\n                id=\"targetSubjectAuthority\"\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            // onClick={this.addNewPrefixes}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default AuthorityConformationEnrichmentOperator;\n","import React, { Fragment } from \"react\";\nimport \"litegraph.js/css/litegraph.css\";\n\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n  DropdownMenu,\n  DropdownToggle,\n} from \"reactstrap\";\n\nclass PredicateConformationEnrichmentOperator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectors: true,\n    };\n\n    this.addInput(\"input\", \"text\");\n    this.properties = {\n      name: \"\",\n      sourcePredicate: \"\",\n      targetPredicate: \"\",\n    };\n\n    var that = this;\n    var show = true;\n\n    this.name = this.addWidget(\n      \"text\",\n      \"Operator Name\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"name\", v);\n        if (document.getElementById(\"name\")) {\n          document.getElementById(\"name\").value = v;\n        }\n      }\n    );\n\n    this.sourcePredicate = this.addWidget(\n      \"text\",\n      \"deer:sourcePredicate\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"sourcePredicate\", v);\n        if (document.getElementById(\"sourcePredicate\")) {\n          document.getElementById(\"sourcePredicate\").value = v;\n        }\n      }\n    );\n\n    this.targetPredicate = this.addWidget(\n      \"text\",\n      \"deer:targetPredicate\",\n      this.properties.name,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        that.setProperty(\"targetPredicate\", v);\n        if (document.getElementById(\"targetPredicate\")) {\n          document.getElementById(\"targetPredicate\").value = v;\n        }\n      }\n    );\n\n    this.addOutput(\"output\", \"text\");\n\n    this.title = \"Predicate Conformation Enrichment Operator\";\n    this.color = \"#816204\";\n    this.bgcolor = \"#bb8b2c\";\n  }\n\n  submitForm = () => {\n    var properties = {\n      node: PredicateConformationEnrichmentOperator,\n      name: this.state[\"name\"],\n      sourcePredicate: this.state[\"sourcePredicate\"],\n      targetPredicate: this.state[\"targetPredicate\"],\n    };\n\n    this.props.parentCallback(properties);\n  };\n\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      [event.target.name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <Card className=\"card-stats\">\n        <div className=\"numbers\">\n          <CardTitle tag=\"p\">Node details</CardTitle>\n          <p />\n        </div>\n        <CardBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"Node name\"\n                onChange={this.handleChange}\n                name=\"name\"\n                id=\"name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Source Predicate</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:sourcePredicate\"\n                onChange={this.handleChange}\n                name=\"sourcePredicate\"\n                id=\"sourcePredicate\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Target Predicate</Label>\n              <Input\n                type=\"text\"\n                //placeholder=\"deer:targetPredicate\"\n                onChange={this.handleChange}\n                name=\"targetPredicate\"\n                id=\"targetPredicate\"\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            onClick={this.submitForm}\n          >\n            Save\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default PredicateConformationEnrichmentOperator;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Fragment } from \"react\";\n// react plugin used to create charts\nimport { LGraph, LGraphCanvas, LiteGraph } from \"litegraph.js\";\nimport _, { result } from \"lodash\";\nimport \"litegraph.js/css/litegraph.css\";\nimport \"./Dashboard.css\";\n\nimport FileModelReader from \"../components/Reader/FileModelReader\";\nimport FileModelWriter from \"../components/Writer/FileModelWriter\";\nimport SparqlModelReader from \"../components/Reader/SparqlModelReader\";\nimport FilterEnrichmentOperator from \"../components/Operator/FilterEnrichmentOperator\";\nimport LinkingEnrichmentOperator from \"../components/Operator/LinkingEnrichmentOperator\";\nimport DereferencingEnrichmentOperator from \"../components/Operator/DereferencingEnrichmentOperator\";\nimport NEREnrichmentOperator from \"../components/Operator/NEREnrichmentOperator\";\nimport CloneEnrichmentOperator from \"../components/Operator/CloneEnrichmentOperator\";\nimport MergeEnrichmentOperator from \"../components/Operator/MergeEnrichmentOperator\";\nimport GeoFusionEnrichmentOperator from \"../components/Operator/GeoFusionEnrichmentOperator\";\nimport SparqlUpdateEnrichmentOperator from \"../components/Operator/SparqlUpdateEnrichmentOperator\";\nimport GeoDistanceEnrichmentOperator from \"../components/Operator/GeoDistanceEnrichmentOperator\";\nimport AuthorityConformationEnrichmentOperator from \"../components/Operator/AuthorityConformationEnrichmentOperator\";\nimport PredicateConformationEnrichmentOperator from \"../components/Operator/PredicateConformationEnrichmentOperator\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Badge,\n  Alert,\n  ModalFooter,\n  Table,\n} from \"reactstrap\";\n//import { Dropdown } from \"semantic-ui-react\";\n\nconst N3 = require(\"n3\");\nconst { DataFactory } = N3;\nconst { namedNode, literal, defaultGraph } = DataFactory;\nconst URI = \"http://localhost:8080\";\nconst BASE_URI = window.location.hostname + \":\" + window.location.port;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: new LGraph(),\n      outputLinks: [],\n      prefixOptions: [],\n      config: ``,\n      isModalOpen: false,\n      namespace: \"\",\n      userInput: \"\",\n      afterFilteredSuggestions: [],\n      addNewPrefixes: [],\n      showForm: false,\n      showComponent: \"\",\n      node: \"\",\n      isDisabled: false,\n      nodeArr: [],\n      file: \"\",\n      visible: false,\n      requestID: \"\",\n      showResultModal: false,\n      requestCompleteModal: false,\n      showConfigButton: false,\n      availableFiles: [],\n      showLogButton: false,\n      formProperties: \"\",\n      input1: \"\",\n      input2: \"\",\n      prefixes: {\n        example: \"urn:example:demo/\",\n        foaf: \"http://xmlns.com/foaf/0.1/\",\n        dbpedia: \"http://dbpedia.org/resource/\",\n        deer: \"http://w3id.org/deer/\",\n        fcage: \"http://w3id.org/fcage/\",\n        geo: \"http://www.w3.org/2003/01/geo/wgs84_pos#\",\n        owl: \"http://www.w3.org/2002/07/owl#\",\n        rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n        xsd: \"http://www.w3.org/2001/XMLSchema#\",\n      },\n      componentArray: [\n        {\n          src: FileModelReader,\n          title: \"File Model Reader\",\n          name: \"FileModelReader\",\n          url: \"Reader/FileModelReader\",\n          form: <FileModelReader parentCallback={this.callbackFunction} />,\n        },\n        {\n          src: FileModelWriter,\n          title: \"File Model Writer\",\n          name: \"FileModelWriter\",\n          url: \"Writer/FileModelWriter\",\n          form: <FileModelWriter parentCallback={this.callbackFunction} />,\n        },\n        {\n          src: FilterEnrichmentOperator,\n          title: \"Filter Enrichment Operator\",\n          name: \"FilterEnrichmentOperator\",\n          url: \"Operator/FilterEnrichmentOperator\",\n          form: (\n            <FilterEnrichmentOperator parentCallback={this.callbackFunction} />\n          ),\n        },\n        {\n          src: LinkingEnrichmentOperator,\n          title: \"Linking Enrichment Operator\",\n          name: \"LinkingEnrichmentOperator\",\n          url: \"Operator/LinkingEnrichmentOperator\",\n          form: (\n            <LinkingEnrichmentOperator parentCallback={this.callbackFunction} />\n          ),\n        },\n        {\n          src: NEREnrichmentOperator,\n          title: \"NER Enrichment Operator\",\n          name: \"NEREnrichmentOperator\",\n          url: \"Operator/NEREnrichmentOperator\",\n          form: (\n            <NEREnrichmentOperator parentCallback={this.callbackFunction} />\n          ),\n        },\n        {\n          src: DereferencingEnrichmentOperator,\n          title: \"Dereferencing Enrichment Operator\",\n          name: \"DereferencingEnrichmentOperator\",\n          url: \"Operator/DereferencingEnrichmentOperator\",\n          form: (\n            <DereferencingEnrichmentOperator\n              parentCallback={this.callbackFunction}\n            />\n          ),\n        },\n        {\n          src: GeoFusionEnrichmentOperator,\n          title: \"GeoFusion Enrichment Operator\",\n          name: \"GeoFusionEnrichmentOperator\",\n          url: \"Operator/GeoFusionEnrichmentOperator\",\n          form: (\n            <GeoFusionEnrichmentOperator\n              parentCallback={this.callbackFunction}\n            />\n          ),\n        },\n        {\n          src: AuthorityConformationEnrichmentOperator,\n          title: \"Authority Conformation Enrichment Operator\",\n          name: \"AuthorityConformationEnrichmentOperator\",\n          url: \"Operator/AuthorityConformationEnrichmentOperator\",\n          form: (\n            <AuthorityConformationEnrichmentOperator\n              parentCallback={this.callbackFunction}\n            />\n          ),\n        },\n        {\n          src: PredicateConformationEnrichmentOperator,\n          title: \"Predicate Conformation Enrichment Operator\",\n          name: \"PredicateConformationEnrichmentOperator\",\n          url: \"Operator/PredicateConformationEnrichmentOperator\",\n          form: (\n            <PredicateConformationEnrichmentOperator\n              parentCallback={this.callbackFunction}\n            />\n          ),\n        },\n        {\n          src: GeoDistanceEnrichmentOperator,\n          title: \"GeoDistance Enrichment Operator\",\n          name: \"GeoDistanceEnrichmentOperator\",\n          url: \"Operator/GeoDistanceEnrichmentOperator\",\n          form: (\n            <GeoDistanceEnrichmentOperator\n              parentCallback={this.callbackFunction}\n            />\n          ),\n        },\n        {\n          src: SparqlUpdateEnrichmentOperator,\n          title: \"Sparql Update Enrichment Operator\",\n          name: \"SparqlUpdateEnrichmentOperator\",\n          url: \"Operator/SparqlUpdateEnrichmentOperator\",\n          form: (\n            <SparqlUpdateEnrichmentOperator\n              parentCallback={this.callbackFunction}\n            />\n          ),\n        },\n        {\n          src: MergeEnrichmentOperator,\n          title: \"Merge Enrichment Operator\",\n          name: \"MergeEnrichmentOperator\",\n          url: \"Operator/MergeEnrichmentOperator\",\n          form: (\n            <MergeEnrichmentOperator parentCallback={this.callbackFunction} />\n          ),\n        },\n        {\n          src: CloneEnrichmentOperator,\n          title: \"Clone Enrichment Operator\",\n          name: \"CloneEnrichmentOperator\",\n          url: \"Operator/CloneEnrichmentOperator\",\n          form: (\n            <CloneEnrichmentOperator parentCallback={this.callbackFunction} />\n          ),\n        },\n        {\n          src: SparqlModelReader,\n          title: \"SparQL Model Reader\",\n          name: \"SparqlModelReader\",\n          url: \"Reader/SparqlModelReader\",\n          form: <SparqlModelReader parentCallback={this.callbackFunction} />,\n        },\n      ],\n    };\n  }\n\n  getBaseUrl = () => {\n    var re = new RegExp(/^.*\\//);\n    return re.exec(window.location.href);\n  };\n\n  callbackFunction = (properties) => {\n    console.log(properties);\n    this.setState({\n      formProperties: properties,\n    });\n  };\n\n  componentDidMount() {\n    var graphCanvas = new LGraphCanvas(\"#mycanvas\", this.state.graph);\n    this.state.graph.start();\n\n    //double click on a node will render a form on the UI\n    graphCanvas.onShowNodePanel = (node) => {\n      this.setState({\n        node: node,\n      });\n    };\n    graphCanvas.show_info = false;\n\n    //returns the prefixes\n    fetch(\"https://prefix.cc/context\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        this.setState({\n          contexts: content[\"@context\"],\n          prefixOptions: Object.keys(content[\"@context\"]),\n        });\n      });\n\n    if (this.state.userInput === \"\" || this.state.namespace === \"\") {\n      this.setState({\n        isDisabled: true,\n      });\n    }\n\n    const parser = new N3.Parser();\n    fetch(BASE_URI + \"/shapes\")\n      .then(function (response) {\n        return response.text();\n      })\n      .then((content) => {\n        parser.parse(content, (error, quad, prefixes) => {\n          if (quad && quad.predicate.id.includes(\"targetClass\")) {\n            this.showNode(quad.object.id);\n          } else {\n          }\n          //  console.log(\"No node returned.\");\n        });\n      });\n  }\n\n  showNode = (quadOb) => {\n    this.state.componentArray.map((comp, key) => {\n      if (quadOb.includes(comp.name)) {\n        comp.src.title = comp.title;\n        LiteGraph.registerNodeType(comp.url, comp.src);\n      }\n    });\n  };\n\n  toggleDropdown = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  };\n\n  getOutputLinks = (node) => {\n    for (let link in node.outputs) {\n      if (node.outputs[link].links) {\n        for (let nodeLink in node.outputs[link].links) {\n          var link_id = node.outputs[link].links[nodeLink];\n          var linkInGraph = this.state.graph.links[link_id];\n          if (linkInGraph) {\n            var target_node = this.state.graph.getNodeById(\n              linkInGraph.target_id\n            );\n            return target_node;\n          }\n        }\n      }\n    }\n  };\n\n  getInputLink = (node) => {\n    console.log(node);\n    if (node.type === \"Operator/LinkingEnrichmentOperator\") {\n      var inputLinkInGraph1 = this.state.graph.links[node.inputs[0].link];\n      var inputLinkInGraph2 = this.state.graph.links[node.inputs[1].link];\n      if (inputLinkInGraph1) {\n        var inputOriginNode1 = this.state.graph.getNodeById(\n          inputLinkInGraph1.origin_id\n        ).properties.name;\n      }\n      if (inputLinkInGraph2) {\n        var inputOriginNode2 = this.state.graph.getNodeById(\n          inputLinkInGraph2.origin_id\n        ).properties.name;\n      }\n      console.log(inputOriginNode1);\n\n      return {\n        first: inputOriginNode1,\n        second: inputOriginNode2,\n      };\n    } else {\n      for (let link in node.inputs) {\n        if (node.inputs[link].link) {\n          console.log(node.inputs[link].link);\n          var inputLinkId = node.inputs[link].link;\n          var inputLinkInGraph = this.state.graph.links[inputLinkId];\n          if (inputLinkInGraph) {\n            var inputOriginNode = this.state.graph.getNodeById(\n              inputLinkInGraph.origin_id\n            );\n            return inputOriginNode;\n          }\n        }\n      }\n    }\n  };\n\n  saveConfig = () => {\n    var data = this.state.graph.serialize();\n    //use N3\n    const myQuad = DataFactory.quad(\n      namedNode(\"https://ruben.verborgh.org/profile/#me\"),\n      namedNode(\"http://xmlns.com/foaf/0.1/givenName\"),\n      literal(\"Ruben\", \"en\"),\n      defaultGraph()\n    );\n\n    var writer = new N3.Writer(\n      {\n        prefixes: this.state.prefixes,\n      },\n      { format: \"N-Triples\" }\n    );\n\n    var parser = new N3.Parser({ format: \"N3\", blankNodePrefix: \"\" });\n    console.log(this.state.formProperties);\n    data.nodes.map((node, key) => {\n      writer.addQuad(\n        namedNode(\"urn:example:demo/\" + node.properties.name),\n        namedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"), //predicate\n        namedNode(\"http://w3id.org/deer/\" + node.type.split(\"/\")[1]) //object\n      );\n\n      // if (this.getOutputLinks(node)) {\n      //   //if it has output links, check and add a quad\n      //   var readerTargetNode = this.getOutputLinks(node);\n      //   writer.addQuad(\n      //     namedNode(\"urn:example:demo/\" + node.properties.name),\n      //     namedNode(\"http://w3id.org/fcage/\" + \"hasOutput\"),\n      //     namedNode(\"urn:example:demo/\" + readerTargetNode.properties.name)\n      //   );\n      // }\n      //if it has an input link, check and add a quad\n      if (node.inputs) {\n        if (node.type === \"Operator/LinkingEnrichmentOperator\") {\n          var inputs = this.getInputLink(node);\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/fcage/\" + \"hasInput\"),\n            writer.list([\n              namedNode(\"urn:example:demo/\" + inputs.first),\n              namedNode(\"urn:example:demo/\" + inputs.second),\n            ])\n          );\n        } else {\n          var originInputNode = this.getInputLink(node);\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/fcage/\" + \"hasInput\"),\n            namedNode(\"urn:example:demo/\" + originInputNode.properties.name)\n          );\n        }\n      }\n\n      //File Model Reader\n      if (node.type === \"Reader/FileModelReader\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type === \"Reader/FileModelReader\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.fromUri = this.state.formProperties.fromUri;\n          node.properties.fromPath = this.state.formProperties.fromPath;\n        }\n        if (node.properties.fromUri) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"fromUri\"),\n            literal(node.properties.fromUri)\n          );\n        }\n        if (node.properties.fromPath) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"fromPath\"),\n            literal(node.properties.fromPath)\n          );\n        }\n      }\n\n      //Sparql Model Reader\n      if (node.type === \"Reader/SparqlModelReader\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type === \"Reader/SparqlModelReader\"\n        ) {\n          node.properties.name = this.state.formProperties.name;\n          node.properties.fromEndpoint = this.state.formProperties.fromEndpoint;\n          node.properties.sparqlDescribeOf = this.state.formProperties.useSparqlDescribeOf;\n          node.properties.useSparqlConstruct = this.state.formProperties.useSparqlConstruct;\n        }\n        if (node.properties.fromEndpoint) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"fromEndpoint\"),\n            namedNode(node.properties.fromEndpoint)\n          );\n        }\n        if (node.properties.sparqlDescribeOf) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"useSparqlDescribeOf\"),\n            namedNode(node.properties.sparqlDescribeOf)\n          );\n        }\n\n        if (node.properties.useSparqlConstruct) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"useSparqlConstruct\"),\n            literal(node.properties.useSparqlConstruct)\n          );\n        }\n      }\n\n      //File Model Writer\n      if (node.type === \"Writer/FileModelWriter\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type === \"Writer/FileModelWriter\"\n        ) {\n          node.properties.name = this.state.formProperties.name;\n          node.properties.outputFile = this.state.formProperties.outputFile;\n          node.properties.outputFormat = this.state.formProperties.outputFormat;\n        }\n        if (node.properties.outputFile && node.properties.outputFormat) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"outputFile\"),\n            literal(node.properties.outputFile)\n          );\n\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"outputFormat\"),\n            literal(node.properties.outputFormat)\n          );\n        }\n      }\n      //Filter Enrichment Operator\n      if (node.type === \"Operator/FilterEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/FilterEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.formProperties.name;\n          node.properties.selector = this.state.formProperties.selector;\n          node.properties.resource = this.state.formProperties.resource;\n          node.properties.sparqlConstructQuery = this.state.formProperties.sparqlConstructQuery;\n        }\n        if (node.properties.selector) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"selector\"), //predicate\n            writer.blank([\n              {\n                predicate: namedNode(\n                  \"http://w3id.org/deer/\" + node.properties.selector\n                ),\n                object: namedNode(node.properties.resource),\n              },\n            ])\n          );\n        } else if (node.properties.sparqlConstructQuery) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"sparqlConstructQuery\"),\n            literal(node.properties.sparqlConstructQuery)\n          );\n        }\n      }\n      //Dereferencing enrichment Operator\n      if (node.type === \"Operator/DereferencingEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/DereferencingEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.lookUpPrefix = this.state.formProperties.lookUpPrefix;\n          node.properties.dereferencingProperty = this.state.formProperties.dereferencingProperty;\n          node.properties.importProperty = this.state.formProperties.importProperty;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/operation\"),\n          writer.blank([\n            {\n              predicate: namedNode(\"urn:example:demo/\" + \"lookUpPrefix\"),\n              object: literal(node.properties.lookUpPrefix),\n            },\n            {\n              predicate: namedNode(\n                \"urn:example:demo/\" + \"dereferencingProperty\"\n              ),\n              object: literal(node.properties.dereferencingProperty),\n            },\n            {\n              predicate: namedNode(\"urn:example:demo/\" + \"importProperty\"),\n              object: literal(node.properties.importProperty),\n            },\n          ])\n        );\n      }\n\n      //GeoFusion Enrichment Operator\n      if (node.type === \"Operator/GeoFusionEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/GeoFusionEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.fusionAction = this.state.formProperties.fusionAction;\n          node.properties.mergeOtherStatements = this.state.formProperties.mergeOtherStatements;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/fusionAction\"),\n          literal(node.properties.fusionAction)\n        );\n\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/mergeOtherStatements\"),\n          literal(node.properties.mergeOtherStatements)\n        );\n      }\n\n      //Authority Conformation Enrichment Operator\n      if (node.type === \"Operator/AuthorityConformationEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/AuthorityConformationEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.sourceSubjectAuthority = this.state.formProperties.sourceSubjectAuthority;\n          node.properties.targetSubjectAuthority = this.state.formProperties.targetSubjectAuthority;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/operation\"),\n          writer.blank([\n            {\n              predicate: namedNode(\n                \"http://w3id.org/deer/sourceSubjectAuthority\"\n              ),\n              object: namedNode(node.properties.sourceSubjectAuthority),\n            },\n            {\n              predicate: namedNode(\n                \"http://w3id.org/deer/targetSubjectAuthority\"\n              ),\n              object: namedNode(node.properties.targetSubjectAuthority),\n            },\n          ])\n        );\n      }\n\n      //Predicate Conformation Enrichment Operator\n      if (node.type === \"Operator/PredicateConformationEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/PredicateConformationEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.sourcePredicate = this.state.formProperties.sourcePredicate;\n          node.properties.targetPredicate = this.state.formProperties.targetPredicate;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/operation\"),\n          writer.blank([\n            {\n              predicate: namedNode(\"http://w3id.org/deer/sourcePredicate\"),\n              object: literal(node.properties.sourcePredicate),\n            },\n            {\n              predicate: namedNode(\"http://w3id.org/deer/targetPredicate\"),\n              object: literal(node.properties.targetPredicate),\n            },\n          ])\n        );\n      }\n\n      //GeoDistance Enrichment Operator\n      if (node.type === \"Operator/GeoDistanceEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/GeoDistanceEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.selectPredicate = this.state.formProperties.selectPredicate;\n          node.properties.distancePredicate = this.state.formProperties.distancePredicate;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"selectPredicate\"),\n          namedNode(node.properties.selectPredicate)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"distancePredicate\"),\n          namedNode(node.properties.distancePredicate)\n        );\n      }\n\n      if (node.type === \"Operator/LinkingEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/LinkingEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.formProperties.name;\n          node.properties.specFile = this.state.formProperties.specFile;\n          node.properties.linksPart = this.state.formProperties.linksPart;\n          node.properties.selectMode = this.state.formProperties.selectMode;\n          node.properties.linkSpecification = this.state.formProperties.linkSpecification;\n          node.properties.linkingPredicate = this.state.formProperties.linkingPredicate;\n          node.properties.threshold = this.state.formProperties.threshold;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"specFile\"),\n          literal(node.properties.specFile)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"linksPart\"),\n          literal(node.properties.linksPart)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"selectMode\"),\n          literal(node.properties.selectMode)\n        );\n        if (node.properties.linkSpecification) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"linkSpecification\"),\n            literal(node.properties.linkSpecification)\n          );\n        }\n        if (node.properties.linkingPredicate) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"linkingPredicate\"),\n            literal(node.properties.linkingPredicate)\n          );\n        }\n        if (node.properties.threshold) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"threshold\"),\n            literal(node.properties.threshold)\n          );\n        }\n      }\n\n      //NER Enrichment Operator\n      if (node.type === \"Operator/NEREnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/NEREnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.literalProperty = this.state.formProperties.literalProperty;\n          node.properties.importProperty = this.state.formProperties.importProperty;\n          node.properties.neType = this.state.formProperties.neType;\n          node.properties.foxUrl = this.state.formProperties.foxUrl;\n        }\n\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"literalProperty\"),\n          namedNode(node.properties.literalProperty)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"importProperty\"),\n          namedNode(node.properties.distancePredimportPropertyicate)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"foxUrl\"),\n          namedNode(node.properties.foxUrl)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"neType\"),\n          literal(node.properties.neType)\n        );\n      }\n\n      //Sparql Update Enrichment Operator\n      if (node.type === \"Operator/SparqlUpdateEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/NEREnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.sparqlUpdateQuery = this.state.formProperties.sparqlUpdateQuery;\n        }\n\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"sparqlUpdateQuery\"),\n          literal(node.properties.sparqlUpdateQuery)\n        );\n      }\n    });\n    writer.end((error, result) => {\n      console.log(result);\n      this.submitConfig(result);\n      result = \"\";\n    });\n  };\n\n  //TODO: Download the results\n  downloadResults = (index) => {\n    fetch(\n      BASE_URI +\n        \"/result/\" +\n        this.state.requestID +\n        \"/\" +\n        this.state.availableFiles[index]\n    ).then((response) => {\n      response.blob().then((blob) => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.availableFiles[index];\n        a.click();\n      });\n    });\n  };\n\n  submitConfig = (result) => {\n    var data = new Blob([result], { type: \"text/ttl\" });\n    var file = new File([data], \"config.ttl\");\n\n    var formData = new FormData();\n    formData.append(\"config\", file);\n    fetch(BASE_URI + \"/submit\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.error && res.error.code === -1) {\n          this.setState({\n            visible: true,\n          });\n        } else if (res.requestId) {\n          this.setState({\n            requestID: res.requestId,\n            showLogButton: true,\n          });\n          this.interval = setInterval(this.getStatusForRequest, 1000);\n        }\n      });\n  };\n\n  getStatusForRequest = () => {\n    fetch(BASE_URI + \"/status/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        if (content.status.code === 2) {\n          clearInterval(this.interval);\n          this.setState({\n            requestCompleteModal: true,\n            showConfigButton: true,\n          });\n          this.getResults();\n        }\n      });\n  };\n\n  getResults = () => {\n    fetch(BASE_URI + \"/results/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        console.log(content.availableFiles);\n        this.setState({\n          availableFiles: content.availableFiles,\n        });\n      });\n  };\n\n  showLogs = () => {\n    fetch(BASE_URI + \"/logs/\" + this.state.requestID).then(function (response) {\n      let a = document.getElementById(\"downloadLink\");\n      a.href = response.url;\n      a.click();\n    });\n  };\n  toggle = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  getFilteredOptions = (event) => {\n    this.setState({\n      afterFilteredSuggestions: this.state.prefixOptions.filter((i) => {\n        return i.toLowerCase().includes(event.target.value.toLowerCase());\n      }),\n      userInput: event.target.value,\n    });\n  };\n\n  selectedPrefix = (event) => {\n    this.setState({\n      afterFilteredSuggestions: [],\n      namespace: this.state.contexts[event.target.value],\n      userInput: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  handleNamespaceChange = (event) => {\n    this.setState({\n      namespace: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  addNewPrefixes = (e) => {\n    this.setState({\n      addNewPrefixes: this.state.addNewPrefixes.concat(this.state.userInput),\n    });\n    this.state.prefixes[this.state.userInput] = this.state.namespace;\n  };\n\n  saveResults = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleResultModal = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleRequestCompleteModal = () => {\n    this.setState({\n      requestCompleteModal: !this.state.requestCompleteModal,\n    });\n  };\n\n  render() {\n    const options = _.map(this.state.prefixOptions, (opt, index) => ({\n      key: opt,\n      text: opt,\n      value: opt,\n    }));\n\n    return (\n      <div className=\"content\">\n        <Modal isOpen={this.state.visible} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Incorrect Configuration\n          </ModalHeader>\n          <ModalBody>\n            Please input all the required fields and connections.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.requestCompleteModal}\n          toggle={this.toggleRequestCompleteModal}\n        >\n          <ModalHeader toggle={this.toggleRequestCompleteModal}>\n            Status\n          </ModalHeader>\n          <ModalBody>\n            The results are ready. You can download them by clicking 'Show\n            Results'.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.showResultModal}\n          toggle={this.toggleResultModal}\n        >\n          <ModalHeader toggle={this.toggleResultModal}>Results</ModalHeader>\n          <ModalBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th>File</th>\n                  <th>Download</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.availableFiles.map((file, index) => (\n                  <tr key={index}>\n                    <td>{file}</td>\n                    <td>\n                      <Button onClick={() => this.downloadResults(index)}>\n                        <i\n                          className=\"fa fa-download\"\n                          style={{ color: `white` }}\n                        />{\" \"}\n                        Download\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </ModalBody>\n        </Modal>\n        <Row>\n          <Col lg=\"12\" md=\"12\" sm=\"12\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Prefixes</CardTitle>\n                <p />\n              </div>\n              <CardBody>\n                <Row>\n                  <Col md=\"12\" xs=\"12\">\n                    <Form>\n                      <Row>\n                        <Col className=\"pr-1\" md=\"4\">\n                          <Fragment>\n                            <FormGroup className=\"dropdown\">\n                              <label>Label</label>\n                              <Input\n                                placeholder=\"Label\"\n                                type=\"text\"\n                                value={this.state.userInput}\n                                onChange={this.getFilteredOptions}\n                              ></Input>\n                              <Dropdown\n                                className=\"dropdown-content\"\n                                toggle={this.toggleDropdown}\n                              >\n                                {this.state.afterFilteredSuggestions.map(\n                                  (suggestions, key) => (\n                                    <DropdownItem\n                                      className=\"dropdown-item\"\n                                      value={suggestions}\n                                      onClick={this.selectedPrefix}\n                                    >\n                                      {suggestions}\n                                    </DropdownItem>\n                                  )\n                                )}\n                              </Dropdown>\n                            </FormGroup>\n                          </Fragment>\n                        </Col>\n                        <Col className=\"pl-1\" md=\"4\">\n                          <FormGroup>\n                            <label>Namespace</label>\n                            <Input\n                              placeholder=\"Namespace\"\n                              type=\"text\"\n                              value={this.state.namespace}\n                              onChange={this.handleNamespaceChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <div className=\"pl-1\" md=\"4\">\n                          <Button\n                            disabled={this.state.isDisabled}\n                            className=\"btn-round prefixBtn\"\n                            color=\"primary\"\n                            onClick={this.addNewPrefixes}\n                          >\n                            Add prefix\n                          </Button>\n                        </div>\n                      </Row>\n                    </Form>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {this.state.addNewPrefixes.map((addPrefix) => (\n                    <Badge variant=\"light\"> {addPrefix}</Badge>\n                  ))}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"9\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h5\">Graph</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <canvas id=\"mycanvas\" height=\"600\" width=\"1000\"></canvas>{\" \"}\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {/* <a\n                    download=\"config.ttl\"\n                    id=\"downloadlink\"\n                    //style={{ display: \"none\" }}\n                    ref=\"file\"\n                  > */}\n                  <Button onClick={this.saveConfig}>\n                    <i className=\"fa fa-cog\" style={{ color: `white` }} /> Run\n                    Configuration\n                  </Button>\n                  {/* </a> */}\n                  {this.state.showConfigButton ? (\n                    <Button\n                      onClick={this.saveResults}\n                      style={{ marginLeft: `10px` }}\n                    >\n                      <i\n                        className=\"fa fa-sticky-note\"\n                        style={{ color: `white` }}\n                      />{\" \"}\n                      Show results\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.state.showLogButton ? (\n                    <a\n                      target=\"_blank\"\n                      id=\"downloadlink\"\n                      //style={{ display: \"none\" }}\n                      ref=\"file\"\n                    >\n                      <Button\n                        onClick={this.showLogs}\n                        style={{ marginLeft: `10px` }}\n                      >\n                        <i className=\"fa fa-cog\" style={{ color: `white` }} />{\" \"}\n                        Logs\n                      </Button>\n                    </a>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          {/* <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>Display Config</ModalHeader>\n            <ModalBody></ModalBody>\n          </Modal> */}\n          <Col md=\"3\">\n            {this.state.componentArray.map((comp, key) => {\n              if (this.state.node.title === comp.title) {\n                return comp.form;\n              }\n            })}\n          </Col>\n        </Row>\n        {/* <Row>\n            <Col md=\"4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h5\">Email Statistics</CardTitle>\n                  <p className=\"card-category\">Last Campaign Performance</p>\n                </CardHeader>\n                <CardBody>\n                  <Pie\n                    data={dashboardEmailStatisticsChart.data}\n                    options={dashboardEmailStatisticsChart.options}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"legend\">\n                    <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                    <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                    <i className=\"fa fa-circle text-gray\" /> Unopened\n                  </div>\n                  <hr />\n                  <div className=\"stats\">\n                    <i className=\"fa fa-calendar\" /> Number of emails sent\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"8\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h5\">NASDAQ: AAPL</CardTitle>\n                  <p className=\"card-category\">Line Chart with Points</p>\n                </CardHeader>\n                <CardBody>\n                  <Line\n                    data={dashboardNASDAQChart.data}\n                    options={dashboardNASDAQChart.options}\n                    width={400}\n                    height={100}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"chart-legend\">\n                    <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                  </div>\n                  <hr />\n                  <div className=\"card-stats\">\n                    <i className=\"fa fa-check\" /> Data information certified\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row> */}\n      </div>\n    );\n  }\n}\n\nLiteGraph.registered_node_types = {};\nLiteGraph.searchbox_extras = {};\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DemoNavbar from \"components/Navbars/DemoNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport routes from \"routes.js\";\nimport Admin from \"./Admin.css\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    };\n    this.mainPanel = React.createRef();\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <DemoNavbar {...this.props} />\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  component={prop.component}\n                  key={key}\n                />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.jsx\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard,\n    layout: \"/admin\"\n  }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input,\n} from \"reactstrap\";\n\nimport DemoNavbar from \"./DemoNavbar.css\";\nimport routes from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\",\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"dark\",\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\",\n      });\n    } else {\n      this.setState({\n        color: \"transparent\",\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\"></div>\n            <NavbarBrand href=\"/\">\n              <img\n                className=\"logo-height\"\n                alt=\"...\"\n                src={require(\"assets/img/deer-logo.svg\")}\n              />\n              <span className=\"logo-title\">DEER Web UI</span>\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            {/* <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form> */}\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <nav className=\"footer-nav\">\n              <ul>\n                <li>\n                  <a href=\"https://www.creative-tim.com\" target=\"_blank\">\n                    {/* TODO: */}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://blog.creative-tim.com\" target=\"_blank\"></a>\n                </li>\n                <li>\n                  <a\n                    href=\"https://www.creative-tim.com/license\"\n                    target=\"_blank\"\n                  ></a>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"credits ml-auto\">\n              {/* <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with{\" \"}\n                <i className=\"fa fa-heart heart\" /> by Creative Tim\n              </div> */}\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}